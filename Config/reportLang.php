<?php

return [
    // keys which start with `:` are considered localized strings used in the template not for the report.
    ':status:1' => 'successful',
    ':status:0' => 'untested',
    ':status:-1' => 'skipped',
    ':status:-2' => 'warning',
    ':status:-3' => 'failure',
    ':status:-4' => 'error',
    // template language
    ':testreport' => 'Test Report',
    ':created' => 'Created',
    ':version' => 'Version',
    ':total' => 'Total',
    ':covered' => 'Covered',
    ':uncovered' => 'Uncovered',
    ':methods' => 'Methods',
    ':ratio' => 'Ratio',
    ':statements' => 'Statements',
    ':conditionals' => 'Conditionals',
    ':successful' => 'Successful',
    ':skipps' => 'Skipps',
    ':errors' => 'Errors',
    ':warnings' => 'Warnings',
    ':failures' => 'Failures',
    ':description' => 'Description',
    ':introduction' => 'Introduction',
    ':introduction_desc_1' => 'This test report is automatically generated and includes information automatically generated by standard testing tools as well as custom tools in order to test and report the correctness as well as the quality of the software.',
    ':structure' => 'Table of Contents',
    ':structure_link_1' => 'Introduction',
    ':structure_link_2' => 'Table of Contents',
    ':structure_link_3' => 'Objective',
    ':structure_link_4' => 'Testing Process',
    ':structure_link_5' => 'Testing Summary',
    ':structure_link_6' => 'Tests',
    ':structure_link_9' => 'Disclaimer',
    ':objective' => 'Objective',
    ':objective_desc_1' => 'The objective of this report is to provide important information to users and auditors in order to check and re-validate the correctness and quality of the tested software. In this automatically generated report you can confirm if the functionality of the tested software is ensured. This is especially important and helpful for software updates and major version changes. By providing these test reports we hope to help customers, partners and auditors with their  software validation processes due to internal or external requirements.',
    ':testing_process' => 'Testing Process',
    ':testing_process_desc_1' => 'Our goal is to provide as many and comprehensive tests as possible in order to ensure risks As Low As Reasonably Possible (ALARP). The tests we create can be categorized into multiple non-exclusive categories such as:',
    ':testing_process_list_1' => 'Unit Test vs. Integration Test vs. Static Tests',
    ':testing_process_list_2' => 'Frontend vs. Backend',
    ':testing_process_list_3' => 'Internal vs. 3rd Party',
    ':testing_process_list_4' => 'Framework vs. Library vs. Module',
    ':testing_process_list_5' => 'Environment dependent vs. Environment independent',
    ':testing_process_desc_2' => 'In addition to these functional tests we also do performance analysis of critical components. In addition to these automated tests we also do manual tests which are not included in this report during the development process and testing environments. New tests are constantly added and old tests are improved if applicable. In case tests become redundant or no longer provide any benefit due to software changes we may remove them.',
    ':testing_summary' => 'Testing Summary',
    ':testing_summary_coverage' => 'Coverage',
    ':testing_summary_tests' => 'Tests',
    ':testing_summary_desc_1' => 'This section contains a brief overview about the testing results.',
    ':testing_summary_desc_2' => 'Total amount of assertions:',
    ':testing_summary_desc_3' => 'Total testing time:',
    ':tests' => 'Tests',
    ':test_suits' => 'Test Suits',
    ':disclaimer' => 'Disclaimer',
    ':disclaimer_desc_1' => 'This test report doesn\'t provide any legal warrenty over completeness and correctness in case of damages of any kind.',

    // report elements come below / the order is important and is the same as in the generated report.
    'phpOMS\tests\Account\AccountManagerTest' => ['description' => 'Account/user manager to handle/access loaded accounts'],
    'phpOMS\tests\Account\AccountManagerTest:testAttributes' => ['description' => 'The manager has the expected member variables'],
    'phpOMS\tests\Account\AccountManagerTest:testDefault' => ['description' => 'The manager has the expected default values after initialization'],
    'phpOMS\tests\Account\AccountManagerTest:testAddAccount' => ['description' => 'An account can be added to the manager'],
    'phpOMS\tests\Account\AccountManagerTest:testRetrieveAccount' => ['description' => 'An account can be retrieved from the manager'],
    'phpOMS\tests\Account\AccountManagerTest:testNoAccountDuplication' => ['description' => 'An account can only be added once to the account manager (no duplication)'],
    'phpOMS\tests\Account\AccountManagerTest:testRemoveAccount' => ['description' => 'An account can be removed from the account manager'],
    'phpOMS\tests\Account\AccountManagerTest:testRemoveOnlyValidAccount' => ['description' => 'Only a valid account can be removed from the manager'],

    'phpOMS\tests\Account\AccountTest' => ['description' => 'Base account/user representation'],
    'phpOMS\tests\Account\AccountTest:testAttributes' => ['description' => 'The account has the expected member variables'],
    'phpOMS\tests\Account\AccountTest:testDefault' => ['description' => 'The account has the expected default values after initialization'],
    'phpOMS\tests\Account\AccountTest:testSetAndGetAccountNames' => ['description' => 'The account names can be set and retrieved correctly'],
    'phpOMS\tests\Account\AccountTest:testAddAndGetGroup' => ['description' => 'Groups can be added to an account'],
    'phpOMS\tests\Account\AccountTest:testSetAndGetAccountEmail' => ['description' => 'An account can have a valid email address'],
    'phpOMS\tests\Account\AccountTest:testChangeStatus' => ['description' => 'The default status of the account can be changed to a different valid status'],
    'phpOMS\tests\Account\AccountTest:testChangeType' => ['description' => 'The default type of the account can be changed to a different valid type'],
    'phpOMS\tests\Account\AccountTest:testPermissionHandling' => ['description' => 'Account permissions can be added and checked for existence'],
    'phpOMS\tests\Account\AccountTest:testLocalization' => ['description' => 'An account can have it\'s own localization'],
    'phpOMS\tests\Account\AccountTest:testLastChange' => ['description' => 'An account \'last activity\' timestamp can be updated and retrieved'],
    'phpOMS\tests\Account\AccountTest:testEmailException' => ['description' => 'An account can only have a valid email'],
    'phpOMS\tests\Account\AccountTest:testStatusException' => ['description' => 'An account can only have valid account status'],
    'phpOMS\tests\Account\AccountTest:testTypeException' => ['description' => 'An account can only have valid account types'],

    'phpOMS\tests\Account\GroupTest' => ['description' => 'Base group representation'],
    'phpOMS\tests\Account\GroupTest:testAttributes' => ['description' => 'The group has the expected member variables'],
    'phpOMS\tests\Account\GroupTest:testDefault' => ['description' => 'The group has the expected default values after initialization'],
    'phpOMS\tests\Account\GroupTest:testSetAndGetGroupNameDescription' => ['description' => 'The group name and description can be set and retrieved correctly'],
    'phpOMS\tests\Account\GroupTest:testPermissionHandling' => ['description' => 'Group permissions can be added and checked for existence'],
    'phpOMS\tests\Account\GroupTest:testChangeStatus' => ['description' => 'The default status of the group can be changed to a different valid status'],
    'phpOMS\tests\Account\GroupTest:testStatusException' => ['description' => 'A group can only have valid group status'],

    'phpOMS\tests\Account\PermissionAbstract' => ['description' => 'Base permission representation'],
    'phpOMS\tests\Account\PermissionAbstract:testAbstractDefault' => ['description' => 'The permission has the expected default values after initialization'],
    'phpOMS\tests\Account\PermissionAbstract:testUnitInputOutput' => ['description' => 'The unit can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testAppInputOutput' => ['description' => 'The app can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testModuleInputOutput' => ['description' => 'The module can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testFromInputOutput' => ['description' => 'The from can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testTypeInputOutput' => ['description' => 'The type can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testElementInputOutput' => ['description' => 'The element can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testComponentInputOutput' => ['description' => 'The component can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testPermissionInputOutput' => ['description' => 'The permission can be set and returned correctly'],
    'phpOMS\tests\Account\PermissionAbstract:testValidPermission' => ['description' => 'Correct permissions are validated'],
    'phpOMS\tests\Account\PermissionAbstract:testInvalidPermission' => ['description' => 'Invalid permissions are not validted'],
    'phpOMS\tests\Account\PermissionAbstract:testValidPermissionFlag' => ['description' => 'Correct permission flags are validated'],
    'phpOMS\tests\Account\PermissionAbstract:testInvalidPermissionFlag' => ['description' => 'Invalid permission flags are not validated'],

    'phpOMS\tests\Algorithm\Clustering\KmeansTest' => ['description' => 'Clustering points/elements with the K-means algorithm'],
    'phpOMS\tests\Algorithm\Clustering\KmeansTest:testKmeans' => ['description' => 'The clustering of points and dynamic check of new points works as expected'],

    'phpOMS\tests\Algorithm\Clustering\PointTest' => ['description' => 'Default point in a cluster'],
    'phpOMS\tests\Algorithm\Clustering\PointTest:testCoordinateInputOutput' => ['description' => 'Coordinates of a point can be set and returned'],
    'phpOMS\tests\Algorithm\Clustering\PointTest:testGroupInputOutput' => ['description' => 'The group/cluster of a point can be set and returned'],
    'phpOMS\tests\Algorithm\Clustering\PointTest:testNameInputOutput' => ['description' => 'The name of a point can be set and returned'],

    'phpOMS\tests\Algorithm\CoinMatching\MinimumCoinProblemTest' => ['description' => 'Match a value by using the minimum quantity of available sub values (Minimum Coin Problem)'],
    'phpOMS\tests\Algorithm\CoinMatching\MinimumCoinProblemTest:testMinimumCoins' => ['description' => 'A value is matched with the minimum quantity of avialable coins.'],

    'phpOMS\tests\Algorithm\JobScheduling\WeightedTest' => ['description' => 'Job scheduling based on values/profit'],
    'phpOMS\tests\Algorithm\JobScheduling\WeightedTest:testNoOverlappingScheduling' => ['description' => 'The optimal job combination is selected to maximize the value/profit without overlapping jobs'],
    'phpOMS\tests\Algorithm\JobScheduling\WeightedTest:testSmallList' => ['description' => 'A job list with only one job simply returns one job'],

    'phpOMS\tests\Algorithm\JobScheduling\JobTest' => ['description' => 'Default job for the job scheduling'],
    'phpOMS\tests\Algorithm\JobScheduling\JobTest:testDefault' => ['description' => 'The job has the expected values after initialization'],

    'phpOMS\tests\Algorithm\Knapsack\BoundedTest' => ['description' => 'A Knapsack implementation for discrete quantities, values and costs and bounded item quantities'],
    'phpOMS\tests\Algorithm\Knapsack\BoundedTest:testBackpacking' => ['description' => 'The optimal item selection in a backpack is calculated in order to optimize the value/profit while considering the available capacity/cost limit'],

    'phpOMS\tests\Algorithm\Knapsack\ContinuousTest' => ['description' => 'A Knapsack implementation for continuous quantities, values and costs'],
    'phpOMS\tests\Algorithm\Knapsack\ContinuousTest:testBackpacking' => ['description' => 'The optimal item selection in a backpack is calculated in order to optimize the value/profit while considering the available capacity/cost limit [discrete quantities]'],
    'phpOMS\tests\Algorithm\Knapsack\ContinuousTest:testBackpackingAlternative' => ['description' => 'The optimal item selection in a backpack is calculated in order to optimize the value/profit while considering the available capacity/cost limit [continuous quantities]'],

    'phpOMS\tests\Algorithm\Knapsack\BackpackTest' => ['description' => 'The default backpack or basket which holds all items for the Knapsack algorithm'],
    'phpOMS\tests\Algorithm\Knapsack\BackpackTest:testDefault' => ['description' => 'The backpack has the expected values after initialization'],
    'phpOMS\tests\Algorithm\Knapsack\BackpackTest:testAddItems' => ['description' => 'Items can be added to the backpack and automatically change the value and cost the backpack contains'],

    'phpOMS\tests\Algorithm\Knapsack\ItemTest' => ['description' => 'The default item to be added to the backpack or basket'],
    'phpOMS\tests\Algorithm\Knapsack\ItemTest:testDefault' => ['description' => 'The item has the expected values after initialization'],

    'phpOMS\tests\Algorithm\PathFinding\AStarTest' => ['description' => 'AStar path finding'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingDiagonal' => ['description' => 'The correct path is found for diagonal movement'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingStraight' => ['description' => 'The correct path is found for straight movement'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingDiagonalOneObstacle' => ['description' => 'The correct path is found for diagonal movement [one obstacle]'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingDiagonalNoObstacle' => ['description' => 'The correct path is found for diagonal movement [no obstacle]'],

    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest' => ['description' => 'JumpPoint path finding'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingDiagonal' => ['description' => 'The correct path is found for diagonal movement'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingStraight' => ['description' => 'The correct path is found for straight movement'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingDiagonalOneObstacle' => ['description' => 'The correct path is found for diagonal movement [one obstacle]'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingDiagonalNoObstacle' => ['description' => 'The correct path is found for diagonal movement [no obstacle]'],

    'phpOMS\tests\Algorithm\PathFinding\GridTest' => ['description' => 'Grid for path finding'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDefault' => ['description' => 'By default a grid is empty'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testGridFromArray' => ['description' => 'A grid can be created from an array'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testNodeInputOutput' => ['description' => 'A node can be set and returned from the grid'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testOutOfBoundsNode' => ['description' => 'Out of bounds nodes cannot be returned'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightHorizontalNeighbors' => ['description' => 'All hoirzontal neighbors can be found correctly'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightVerticalNeighbors' => ['description' => 'All vertical neighbors can be found correctly'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightNoneNeighbors' => ['description' => 'No straight neighbors are found if no straight neighbors exist'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightAllNeighbors' => ['description' => 'All straight neighbors can be found correctly'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalLRNeighbors' => ['description' => 'All neighbors except blocked diagonal neighbors can be found correctly'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalURNeighbors' => ['description' => 'All neighbors except blocked diagonal neighbors can be found correctly'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalNoneNeighbors' => ['description' => 'No diagonal neighbors are found if no neighbors exist'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOnlyNeighbors' => ['description' => 'All diagonal neighbors can be found correctly'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalAllNeighbors' => ['description' => 'All neighbors can be found correctly'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOneObstacleNoBlockNeighbors' => ['description' => 'All neighbors can be found correctly even if one obstacle exists'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOneObstacleBlockNeighbors' => ['description' => 'No diagonal neighbors are found if they are blocked on two sides'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOneObstacleAllNeighbors' => ['description' => 'All neighbors can be found correctly if no obstacles exists'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalNoObstacleBlockNeighbors' => ['description' => 'No diagonal neighbors are found if one obstacle exists'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalNoObstacleAllNeighbors' => ['description' => 'All neighbors can be found correctly if no obstacles exist'],

    'phpOMS\tests\Algorithm\PathFinding\NodeTest' => ['description' => 'Node on grid for path finding'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testDefault' => ['description' => 'The node has the expected values after initialization'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testNodesWithEqualCoordinatesAreEqual' => ['description' => 'Nodes with equal coordinates are equal'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testNodesWithDifferentCoordinatesAreNotEqual' => ['description' => 'Nodes with different coordinates are not equal'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testParentInputOutput' => ['description' => 'A parent node can be set and returned'],

    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest' => ['description' => 'JumpPointNode on grid for path finding'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testDefault' => ['description' => 'The node has the expected values after initialization'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testClosedInputOutput' => ['description' => 'The node can be set closed and checked'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testOpenedInputOutput' => ['description' => 'The node can be set opened and checked'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testTestedInputOutput' => ['description' => 'The node can be set tested and checked'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testGInputOutput' => ['description' => 'The g value cen be set and returned'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testHInputOutput' => ['description' => 'The h value cen be set and returned'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testFInputOutput' => ['description' => 'The f value cen be set and returned'],

    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest' => ['description' => 'JumpPointNode on grid for path finding'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testDefault' => ['description' => 'The node has the expected values after initialization'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testClosedInputOutput' => ['description' => 'The node can be set closed and checked'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testOpenedInputOutput' => ['description' => 'The node can be set opened and checked'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testTestedInputOutput' => ['description' => 'The node can be set tested and checked'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testGInputOutput' => ['description' => 'The g value cen be set and returned'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testHInputOutput' => ['description' => 'The h value cen be set and returned'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testFInputOutput' => ['description' => 'The f value cen be set and returned'],

    'phpOMS\tests\Algorithm\PathFinding\PathTest' => ['description' => 'Path on grid'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testDefault' => ['description' => 'The path has the expected values after initialization'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testDiagonalPathLength' => ['description' => 'The diagonal euclidean path length is calculated correctly'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testStraightPathLength' => ['description' => 'The straight euclidean path length is calculated correctly'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testPathExpansion' => ['description' => 'The path is correctly expanded in case only jump points are defined'],

    'phpOMS\tests\Algorithm\Sort\BitonicSortTest' => ['description' => 'Bitonic sort'],
    'phpOMS\tests\Algorithm\Sort\BitonicSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\BitonicSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\BitonicSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\BubbleSortTest' => ['description' => 'Bubble sort'],
    'phpOMS\tests\Algorithm\Sort\BubbleSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\BubbleSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\BubbleSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\BucketSortTest' => ['description' => 'Bucket sort'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testNoBuckets' => ['description' => 'If no buckets are specified the elements cannot be sorted and an empty result is returned'],

    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest' => ['description' => 'CocktailShaker sort'],
    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\CombSortTest' => ['description' => 'Comb sort'],
    'phpOMS\tests\Algorithm\Sort\CombSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\CombSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\CombSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\CycleSortTest' => ['description' => 'Cycle sort'],
    'phpOMS\tests\Algorithm\Sort\CycleSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\CycleSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\CycleSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\GnomeSortTest' => ['description' => 'Gnome sort'],
    'phpOMS\tests\Algorithm\Sort\GnomeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\GnomeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\GnomeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\HeapSortTest' => ['description' => 'Heap sort'],
    'phpOMS\tests\Algorithm\Sort\HeapSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\HeapSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\HeapSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\InsertionSortTest' => ['description' => 'Insertion sort'],
    'phpOMS\tests\Algorithm\Sort\InsertionSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\InsertionSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\InsertionSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\IntroSortTest' => ['description' => 'Intro sort'],
    'phpOMS\tests\Algorithm\Sort\IntroSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\IntroSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\IntroSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\MergeSortTest' => ['description' => 'Merge sort'],
    'phpOMS\tests\Algorithm\Sort\MergeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\MergeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\MergeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest' => ['description' => 'OddEven sort'],
    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\PancakeSortTest' => ['description' => 'Pancake sort'],
    'phpOMS\tests\Algorithm\Sort\PancakeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\PancakeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\PancakeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\QuickSortTest' => ['description' => 'Quick sort'],
    'phpOMS\tests\Algorithm\Sort\QuickSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\QuickSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\QuickSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\SelectionSortTest' => ['description' => 'Selection sort'],
    'phpOMS\tests\Algorithm\Sort\SelectionSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\SelectionSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\SelectionSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\ShellSortTest' => ['description' => 'Shell sort'],
    'phpOMS\tests\Algorithm\Sort\ShellSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\ShellSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\ShellSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\StoogeSortTest' => ['description' => 'Stooge sort'],
    'phpOMS\tests\Algorithm\Sort\StoogeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\StoogeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\StoogeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Algorithm\Sort\TimSortTest' => ['description' => 'Tim sort'],
    'phpOMS\tests\Algorithm\Sort\TimSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself'],
    'phpOMS\tests\Algorithm\Sort\TimSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order'],
    'phpOMS\tests\Algorithm\Sort\TimSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order'],

    'phpOMS\tests\Asset\AssetManagerTest' => ['description' => 'Asset manager to handle/access assets'],
    'phpOMS\tests\Asset\AssetManagerTest:testAttributes' => ['description' => 'The manager has the expected member variables'],
    'phpOMS\tests\Asset\AssetManagerTest:testDefault' => ['description' => 'The manager has the expected default values after initialization'],
    'phpOMS\tests\Asset\AssetManagerTest:testAddAsset' => ['description' => 'An asset can be added to the manager'],
    'phpOMS\tests\Asset\AssetManagerTest:testRetrieveAsset' => ['description' => 'An asset can be retrieved from the manager'],
    'phpOMS\tests\Asset\AssetManagerTest:testInvalidAssetReplacement' => ['description' => 'An asset can only be added once to the manager (no duplication unless overwritten)'],
    'phpOMS\tests\Asset\AssetManagerTest:testAssetReplacement' => ['description' => 'An asset can be replaced upon request'],
    'phpOMS\tests\Asset\AssetManagerTest:testAssetRemove' => ['description' => 'An asset can be removed from the manager'],

    'phpOMS\tests\Auth\AuthTest' => ['description' => 'Asset manager to handle/access assets'],
    'phpOMS\tests\Auth\AuthTest:testAuthWithEmptyHttpSession' => ['description' => 'The default http session doesn\'t authenticate an account'],

    'phpOMS\tests\Business\Finance\DepreciationTest' => ['description' => 'Depreciation calculations'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testStraightLine' => ['description' => 'The straight line depreciation and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testArithmeticDegressivDepreciation' => ['description' => 'The arithmetic degressiv depreciation and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testArithmeticProgressivDepreciation' => ['description' => 'The arithmetic progressiv depreciation and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testGeometricProgressivDepreciation' => ['description' => 'The geometric progressiv depreciation and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testGeometricDegressivDepreciation' => ['description' => 'The geometric degressiv depreciation and reverse value calculations are correct'],

    'phpOMS\tests\Business\Finance\FinanceFormulasTest' => ['description' => 'Finance formulas'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnualPercentageYield' => ['description' => 'The annual percentage yield (APY) and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueOfAnnuity' => ['description' => 'The future value of annuity (FVA) and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueOfAnnuityContinuousCompounding' => ['description' => 'The future value of annuity continuous compounding (FVACC) and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnuityPaymentPV' => ['description' => 'The annuity payment from the present value (PV) and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnuityPaymentFV' => ['description' => 'The annuity payment from the future value (FV) and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnutiyPaymentFactorPV' => ['description' => 'The annuity payment from the present value (PV) and reverse value calculations are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueOfAnnuity' => ['description' => 'The present value of the annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueAnnuityFactor' => ['description' => 'The present value annuity factor of the annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueOfAnnuityDue' => ['description' => 'The due present value the annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueOfAnnuityDue' => ['description' => 'The due future value the annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testRelativeMarketShare' => ['description' => 'The relative market share calculations by shares and ales are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAssetRatios' => ['description' => 'The asset ratio calculations are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testBalanceRatios' => ['description' => 'Balance ratio calculations for DII, Receivables/Turnover, and more are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDeptRatios' => ['description' => 'Dept ratios for dept coverage, dept to equity and dept to income are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testReturnOnBalancePositions' => ['description' => 'Return on balance statement positions are correct (e.g. return on assets, on equity)'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testBalancePLRatios' => ['description' => 'Balance / P&L ratios are correct (e.g. inventory turnover, net profit margin)'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testRatios' => ['description' => 'Not Implemented!!!'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testCompound' => ['description' => 'Compound calculations for interest, principal and periods are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testContinuousCompounding' => ['description' => 'Continuous compound calculations for interest, principal and periods are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testSimpleInterest' => ['description' => 'Calculations for interest, principal and periods are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDiscountedPaybackPeriod' => ['description' => 'The descounted payback period is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDoublingTime' => ['description' => 'Test the correct calculation of the growth rate in order to double and vice versa'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDoublingTimeContinuousCompounding' => ['description' => 'Test the correct calculation of the growth rate in order to double and vice versa with continuous compounding'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testEquivalentAnnualAnnuity' => ['description' => 'Calculations for equivalent annual annuity are correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFreeCashFlowToEquity' => ['description' => 'The free cash flow to equity calculation is correct (how much cash is available after expenses and dept payments)'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFreeCashFlowToFirm' => ['description' => 'The free cash flow to firm calculation is correct (how much cash is available after expenses)'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValue' => ['description' => 'The future value calculation is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueContinuousCompounding' => ['description' => 'The future value calculation including continuous compounding is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testValueFactor' => ['description' => 'The future value factor calculation is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGeometricMeanReturn' => ['description' => 'The calculation of the geometric mean of multiple return rates is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityFV' => ['description' => 'The calculation of the future value of the growing annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityPaymentFV' => ['description' => 'The calculation of the payment based on the future value of the growing annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityPV' => ['description' => 'The calculation of the present value of the growing annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityPaymentPV' => ['description' => 'The calculation of the payment based on the present value of the growing annuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingPerpetuityPV' => ['description' => 'The calculation of the present value of the growing perpetuity is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testNetPresentValue' => ['description' => 'The calculation of the net present value is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testEmptyNetPresentValue' => ['description' => 'No cash flows in the net prsent value calculation result in 0'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testRealRateOfReturn' => ['description' => 'The calculation of the real rate of return is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testNetWorkingCapital' => ['description' => 'The calculation of the net working capital is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testNumberOfPeriodsPVFV' => ['description' => 'The periods to reach a future value based on the present value is calculated correctly'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValue' => ['description' => 'The calculation of the present value is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueContinuousCompounding' => ['description' => 'The calculation of the present value using continuous compounding is correct'],

    'phpOMS\tests\Business\Finance\LoanTest' => ['description' => 'Loan formulas'],
    'phpOMS\tests\Business\Finance\LoanTest:testLoanToDepositRatio' => ['description' => 'The loan to deposit ratio is correct'],
    'phpOMS\tests\Business\Finance\LoanTest:testLoanToValueRatio' => ['description' => 'The loan to value ratio is correct'],
    'phpOMS\tests\Business\Finance\LoanTest:testPaymentsOnBalloonLoan' => ['description' => 'The balloon loan payments are correct for a given balloon'],
    'phpOMS\tests\Business\Finance\LoanTest:testBalloonBalanceOfLoan' => ['description' => 'The balloon loan residual value (balloon) is correct for given payments'],
    'phpOMS\tests\Business\Finance\LoanTest:testLoanPayment' => ['description' => 'The loan payments are correct for a given interest rate and period [continuous compounding]'],
    'phpOMS\tests\Business\Finance\LoanTest:testRemainingBalanceLoan' => ['description' => 'The residual value is correct for a given payment amount, interest rate and period [continuous compounding]'],

    'phpOMS\tests\Business\Finance\FinanceFormulasTest' => ['description' => 'Stock & bond related  formulas'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testBondEquivalentYield' => ['description' => 'The calculation the bond yield based on face value and price is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testExpectedReturnCAPM' => ['description' => 'The calculation of the return of the capital asset pricing model is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testCapitalGainsYield' => ['description' => 'The capital gains yield calculation is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDilutedEarningsPerShare' => ['description' => 'The diluted earnings per share calculation is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testHoldingPeriodReturn' => ['description' => 'The calculation of the absolute return for multiple holding periods is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testTaxEquivalentYield' => ['description' => 'The tax equivalent yield is calculated correctly'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testNetAssetValue' => ['description' => 'The net asset value is calculated correctly'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueOfStockConstantGrowth' => ['description' => 'The calculation of the present value of a stock with constant growth rate is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testTotalStockReturn' => ['description' => 'The total stock return including dividends and sales price is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testYieldToMaturity' => ['description' => 'The calculation of the yield of a bond is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testZeroCouponBondValue' => ['description' => 'The calculation of value of the zero coupon bond is correct'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testZeroCouponBondEffectiveYield' => ['description' => 'The calculation of the yield of a zero coupon bond is correct'],

    'phpOMS\tests\Business\Finance\LorenzkurveTest' => ['description' => 'Lorenz kurve'],
    'phpOMS\tests\Business\Finance\LorenzkurveTest:testGiniCoefficient' => ['description' => 'The gini coefficient calculation is correct'],

    'phpOMS\tests\Business\Marketing\MetricsTest' => ['description' => 'General marketing metrics'],
    'phpOMS\tests\Business\Marketing\MetricsTest:testCustomerRetention' => ['description' => 'Test the correctnes of the customer retention calculation'],

    'phpOMS\tests\Business\Marketing\NetPromoterScoreTest' => ['description' => 'Net promoter'],
    'phpOMS\tests\Business\Marketing\NetPromoterScoreTest:testDefault' => ['description' => 'The net promoter has the expected default values after initialization'],
    'phpOMS\tests\Business\Marketing\NetPromoterScoreTest:testScoreDetractorPassivePromotor' => ['description' => 'The net promotor score, detractors, passives and promotors are correct'],

    'phpOMS\tests\Business\Programming\MetricsTest' => ['description' => 'General programming metrics'],
    'phpOMS\tests\Business\Programming\MetricsTest:testABCMetric' => ['description' => 'Test correctness of the ABC calculation'],
    'phpOMS\tests\Business\Programming\MetricsTest:testCRAPMetric' => ['description' => 'Test correctness of CRAP score'],

    'phpOMS\tests\Business\Sales\MarketShareEstimationTest' => ['description' => 'Market share calculations'],
    'phpOMS\tests\Business\Sales\MarketShareEstimationTest:testZipfRank' => ['description' => 'The rank calculated with Zipf is correct'],
    'phpOMS\tests\Business\Sales\MarketShareEstimationTest:testZipfShare' => ['description' => 'The market share by rank calculated with Zipf is correct'],

    'phpOMS\tests\Config\OptionsTraitTest' => ['description' => 'Helper for managing otpions'],
    'phpOMS\tests\Config\OptionsTraitTest:testOptionTraitMembers' => ['description' => 'The option helper has the expected attributes'],
    'phpOMS\tests\Config\OptionsTraitTest:testDefault' => ['description' => 'The option helper has the expected default values after initialization'],
    'phpOMS\tests\Config\OptionsTraitTest:testAdd' => ['description' => 'Options can be added to the helper'],
    'phpOMS\tests\Config\OptionsTraitTest:testAddMultiple' => ['description' => 'Multiple options can be added to the helper in one go'],
    'phpOMS\tests\Config\OptionsTraitTest:testGetMultiple' => ['description' => 'Multiple options can be retrieved'],
    'phpOMS\tests\Config\OptionsTraitTest:testOverwrite' => ['description' => 'Options can be overwritten/changed'],

    'phpOMS\tests\DataStorage\Cache\CachePoolTest' => ['description' => 'Pool for caches'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testDefault' => ['description' => 'The pool has the expected default values after initialization'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testAdd' => ['description' => 'New cache connections can be added to the pool'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testOverwrite' => ['description' => 'Cache connections cannot be overwritten with a different cache connection'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testGet' => ['description' => 'Cache connections can be accessed with an identifier'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testGetDefault' => ['description' => 'By default a null cache is returned if no cache connection exists for the identifier'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testCreate' => ['description' => 'Cache connections can created by the pool and automatically get added but not overwritten'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testRemove' => ['description' => 'Cache connections can be removed from the pool'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testRemoveInvalid' => ['description' => 'Removing a cache with an invalid identifier will result in no actions'],

    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest' => ['description' => 'Factory for generating cache connections'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testCreateFileCache' => ['description' => 'The file cache can be created'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testCreateMemCached' => ['description' => 'The memcached cache can be created'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testCreateRedisCache' => ['description' => 'The redis cache can be created'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testInvalidCacheType' => ['description' => 'An invalid cache type results in an exception'],

    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest' => ['description' => 'File cache connection'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testDefault' => ['description' => 'The file cache connection has the expected default values after initialization'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testConnect' => ['description' => 'The connection to a dedicated cache directory can be established (none-exising directories get created)'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testSetInputOutput' => ['description' => 'Different cache data (types) can be set and returned'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testAddInputOutput' => ['description' => 'Cache data can bet added and returned'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidOverwrite' => ['description' => 'Cache data cannot be added if it already exists'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testReplace' => ['description' => 'Existing cache data can be replaced'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidReplace' => ['description' => 'None-existing cache data cannot be replaced'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testDelete' => ['description' => 'Cache data can be deleted'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testStats' => ['description' => 'The cache correctly handles general cache information'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testFlush' => ['description' => 'The cache can be flushed'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testUnexpiredInputOutput' => ['description' => 'Cache data can be set and returned with expiration limits'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testExpiredInputOutput' => ['description' => 'EExpired cache data can be forced to return'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testForceExpiredInputOutput' => ['description' => 'Expired cache data cannot be returned'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidDeleteUnexpired' => ['description' => 'Unexpired cache data connot be delete if lower expiration is defined'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testDeleteExpired' => ['description' => 'Expired cache data can be deleted if higher expiration is defined'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testForceDeleteUnexpired' => ['description' => 'Unexpired data can be force deleted with lower expiration date'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testFlushExpired' => ['description' => 'Cach data can be flushed by expiration date'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testBadCacheStatus' => ['description' => 'A bad cache status will prevent all cache actions'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidCachePath' => ['description' => 'A invalid cache connection will throw an InvalidConnectionConfigException'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidDataType' => ['description' => 'A invalid data type will throw an InvalidArgumentException'],

    'phpOMS\tests\Localization\MoneyTest' => ['description' => 'Money datatype for internal representation of money'],
    'phpOMS\tests\Localization\MoneyTest:testDefaultMemberVariables' => ['description' => 'The datatype has the expected member variables and default values'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyDefaultStringRepresentation' => ['description' => 'The datatype returns the correct default string representation (#,###.##)'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyDecimalPlaces' => ['description' => 'The datatype returns up to 4 decimal places if requested (#,###.####)'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyStringToIntConversion' => ['description' => 'The datatype returns the correct integer representation of a string with up to 4 decimal places also considering differences in decimal and thousands characters if requested for different localizations'],
    'phpOMS\tests\Localization\MoneyTest:testCorrectValueChange' => ['description' => 'The datatype allows to modify the value by overwriting it with new string characters or integers correctly'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyLocalization' => ['description' => 'The datatype can print out money with different thousands, decimals and currency symbols as per definition by the user'],
    'phpOMS\tests\Localization\MoneyTest:testMoneySerialization' => ['description' => 'The string character input is correctly serialized to the numeric representation'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyUnserialization' => ['description' => 'The string character input is correctly unserialized from a numeric representation'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyAddSub' => ['description' => 'The datatype correctly adds and subtracts the different money representations in string, numeric or Money type'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyMultDiv' => ['description' => 'The datatype correctly multiplies and divides the money with numerics'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyAbsoluteValue' => ['description' => 'The datatype correctly handles the absolute value'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyPower' => ['description' => 'The datatype correctly handles the power operator'],

    'phpOMS\tests\System\SystemUtilsTest' => ['description' => 'System information'],
    'phpOMS\tests\System\SystemUtilsTest:testRAM' => ['description' => 'Test if it is possible to get information about the available RAM and usage (on Windows)'],
    'phpOMS\tests\System\SystemUtilsTest:testCPUUsage' => ['description' => 'Test if it is possible to get information about the CPU usage'],

];
