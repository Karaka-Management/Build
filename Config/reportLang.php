<?php

return [
    // keys which start with `:` are considered localized strings used in the template not for the report.
    ':status:1' => 'successful',
    ':status:0' => 'untested',
    ':status:-1' => 'skipped',
    ':status:-2' => 'warning',
    ':status:-3' => 'failure',
    ':status:-4' => 'error',
    // template language
    ':testreport' => 'Test Report',
    ':created' => 'Created',
    ':version' => 'Version',
    ':total' => 'Total',
    ':covered' => 'Covered',
    ':uncovered' => 'Uncovered',
    ':methods' => 'Methods',
    ':ratio' => 'Ratio',
    ':statements' => 'Statements',
    ':conditionals' => 'Conditionals',
    ':successful' => 'Successful',
    ':skipps' => 'Skipps',
    ':errors' => 'Errors',
    ':warnings' => 'Warnings',
    ':failures' => 'Failures',
    ':description' => 'Description',
    ':introduction' => 'Introduction',
    ':introduction_desc_1' => 'This test report is automatically generated and includes information automatically generated by standard testing tools as well as custom tools in order to test and report the correctness as well as the quality of the software.',
    ':structure' => 'Table of Contents',
    ':structure_link_1' => 'Introduction',
    ':structure_link_2' => 'Table of Contents',
    ':structure_link_3' => 'Objective',
    ':structure_link_4' => 'Testing Process',
    ':structure_link_5' => 'Testing Summary',
    ':structure_link_6' => 'Tests',
    ':structure_link_9' => 'Disclaimer',
    ':objective' => 'Objective',
    ':objective_desc_1' => 'The objective of this report is to provide important information to users and auditors in order to check and re-validate the correctness and quality of the tested software. In this automatically generated report you can confirm if the functionality of the tested software is ensured. This is especially important and helpful for software updates and major version changes. By providing these test reports we hope to help customers, partners and auditors with their  software validation processes due to internal or external requirements.',
    ':testing_description' => 'Description',
    ':testing_process' => 'Testing Process',
    ':testing_process_desc_1' => 'Our goal is to provide as many and comprehensive tests as possible in order to ensure risks As Low As Reasonably Possible (ALARP). The tests we create can be categorized into multiple non-exclusive categories such as:',
    ':testing_process_list_1' => 'Unit Tests vs. Integration Tests vs. System Tests vs. Static Tests vs. Code Style',
    ':testing_process_list_2' => 'Frontend vs. Backend',
    ':testing_process_list_3' => 'Internal vs. 3rd Party',
    ':testing_process_list_4' => 'Framework vs. Library vs. Module',
    ':testing_process_list_5' => 'Environment dependent vs. Environment independent',
    ':testing_process_desc_2' => 'In addition to these functional tests we also do performance analysis of critical components. In addition to these automated tests we also do manual tests which are not included in this report during the development process and testing environments. New tests are constantly added and old tests are improved if applicable. In case tests become redundant or no longer provide any benefit due to software changes we may remove them.',
    ':testing_summary' => 'Testing Summary',
    ':testing_summary_coverage' => 'Coverage',
    ':testing_summary_tests' => 'Tests',
    ':testing_summary_desc_1' => 'This section contains a brief overview about the testing results.',
    ':testing_summary_desc_2' => 'Total amount of assertions:',
    ':testing_summary_desc_3' => 'Total testing time:',
    ':tests' => 'Tests',
    ':test_suits' => 'Test Suits',
    ':static_tests' => 'Static Tests',
    ':code_style' => 'Code Style',
    ':disclaimer' => 'Disclaimer',
    ':disclaimer_desc_1' => 'This test report doesn\'t provide any legal warrenty over completeness and correctness in case of damages of any kind.',

    // report elements come below / the order is important and is the same as in the generated report.
    'phpOMS\tests\Account\AccountManagerTest' => ['description' => 'Account/user manager to handle/access loaded accounts', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountManagerTest:testAttributes' => ['description' => 'The manager has the expected member variables', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountManagerTest:testDefault' => ['description' => 'The manager has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountManagerTest:testAddAccount' => ['description' => 'An account can be added to the manager', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountManagerTest:testRetrieveAccount' => ['description' => 'An account can be retrieved from the manager', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountManagerTest:testNoAccountDuplication' => ['description' => 'An account can only be added once to the account manager (no duplication)', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountManagerTest:testRemoveAccount' => ['description' => 'An account can be removed from the account manager', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountManagerTest:testRemoveOnlyValidAccount' => ['description' => 'Only a valid account can be removed from the manager', 'type' => 'framework'],

    'phpOMS\tests\Account\AccountTest' => ['description' => 'Base account/user representation', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testAttributes' => ['description' => 'The account has the expected member variables', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testDefault' => ['description' => 'The account has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testSetAndGetAccountNames' => ['description' => 'The account names can be set and retrieved correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testAddAndGetGroup' => ['description' => 'Groups can be added to an account', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testSetAndGetAccountEmail' => ['description' => 'An account can have a valid email address', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testChangeStatus' => ['description' => 'The default status of the account can be changed to a different valid status', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testChangeType' => ['description' => 'The default type of the account can be changed to a different valid type', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testPermissionHandling' => ['description' => 'Account permissions can be added and checked for existence', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testLocalization' => ['description' => 'An account can have it\'s own localization', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testLastChange' => ['description' => 'An account \'last activity\' timestamp can be updated and retrieved', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testEmailException' => ['description' => 'An account can only have a valid email', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testStatusException' => ['description' => 'An account can only have valid account status', 'type' => 'framework'],
    'phpOMS\tests\Account\AccountTest:testTypeException' => ['description' => 'An account can only have valid account types', 'type' => 'framework'],

    'phpOMS\tests\Account\GroupTest' => ['description' => 'Base group representation', 'type' => 'framework'],
    'phpOMS\tests\Account\GroupTest:testAttributes' => ['description' => 'The group has the expected member variables', 'type' => 'framework'],
    'phpOMS\tests\Account\GroupTest:testDefault' => ['description' => 'The group has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Account\GroupTest:testSetAndGetGroupNameDescription' => ['description' => 'The group name and description can be set and retrieved correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\GroupTest:testPermissionHandling' => ['description' => 'Group permissions can be added and checked for existence', 'type' => 'framework'],
    'phpOMS\tests\Account\GroupTest:testChangeStatus' => ['description' => 'The default status of the group can be changed to a different valid status', 'type' => 'framework'],
    'phpOMS\tests\Account\GroupTest:testStatusException' => ['description' => 'A group can only have valid group status', 'type' => 'framework'],

    'phpOMS\tests\Account\PermissionAbstractTest' => ['description' => 'Base permission representation', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testAbstractDefault' => ['description' => 'The permission has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testUnitInputOutput' => ['description' => 'The unit can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testAppInputOutput' => ['description' => 'The app can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testModuleInputOutput' => ['description' => 'The module can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testFromInputOutput' => ['description' => 'The from can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testTypeInputOutput' => ['description' => 'The type can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testElementInputOutput' => ['description' => 'The element can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testComponentInputOutput' => ['description' => 'The component can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testPermissionInputOutput' => ['description' => 'The permission can be set and returned correctly', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testValidPermission' => ['description' => 'Correct permissions are validated', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testInvalidPermission' => ['description' => 'Invalid permissions are not validted', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testValidPermissionFlag' => ['description' => 'Correct permission flags are validated', 'type' => 'framework'],
    'phpOMS\tests\Account\PermissionAbstractTest:testInvalidPermissionFlag' => ['description' => 'Invalid permission flags are not validated', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Clustering\KmeansTest' => ['description' => 'Clustering points/elements with the K-means algorithm', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Clustering\KmeansTest:testKmeans' => ['description' => 'The clustering of points and dynamic check of new points works as expected', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Clustering\PointTest' => ['description' => 'Default point in a cluster', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Clustering\PointTest:testCoordinateInputOutput' => ['description' => 'Coordinates of a point can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Clustering\PointTest:testGroupInputOutput' => ['description' => 'The group/cluster of a point can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Clustering\PointTest:testNameInputOutput' => ['description' => 'The name of a point can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\CoinMatching\MinimumCoinProblemTest' => ['description' => 'Match a value by using the minimum quantity of available sub values (Minimum Coin Problem)', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\CoinMatching\MinimumCoinProblemTest:testMinimumCoins' => ['description' => 'A value is matched with the minimum quantity of avialable coins.', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\JobScheduling\WeightedTest' => ['description' => 'Job scheduling based on values/profit', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\JobScheduling\WeightedTest:testNoOverlappingScheduling' => ['description' => 'The optimal job combination is selected to maximize the value/profit without overlapping jobs', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\JobScheduling\WeightedTest:testSmallList' => ['description' => 'A job list with only one job simply returns one job', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\JobScheduling\JobTest' => ['description' => 'Default job for the job scheduling', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\JobScheduling\JobTest:testDefault' => ['description' => 'The job has the expected values after initialization', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Knapsack\BoundedTest' => ['description' => 'A Knapsack implementation for discrete quantities, values and costs and bounded item quantities', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Knapsack\BoundedTest:testBackpacking' => ['description' => 'The optimal item selection in a backpack is calculated in order to optimize the value/profit while considering the available capacity/cost limit', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Knapsack\ContinuousTest' => ['description' => 'A Knapsack implementation for continuous quantities, values and costs', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Knapsack\ContinuousTest:testBackpacking' => ['description' => 'The optimal item selection in a backpack is calculated in order to optimize the value/profit while considering the available capacity/cost limit [discrete quantities]', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Knapsack\ContinuousTest:testBackpackingAlternative' => ['description' => 'The optimal item selection in a backpack is calculated in order to optimize the value/profit while considering the available capacity/cost limit [continuous quantities]', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Knapsack\BackpackTest' => ['description' => 'The default backpack or basket which holds all items for the Knapsack algorithm', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Knapsack\BackpackTest:testDefault' => ['description' => 'The backpack has the expected values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Knapsack\BackpackTest:testAddItems' => ['description' => 'Items can be added to the backpack and automatically change the value and cost the backpack contains', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Knapsack\ItemTest' => ['description' => 'The default item to be added to the backpack or basket', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Knapsack\ItemTest:testDefault' => ['description' => 'The item has the expected values after initialization', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Maze\MazeGeneratorTest' => ['description' => 'Maze generation', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Maze\MazeGeneratorTest:testMazeGeneration' => ['description' => 'A random maze can be generated', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Maze\MazeGeneratorTest:testMazeRender' => ['description' => 'A random maze can be rendered', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\AStarTest' => ['description' => 'AStar path finding', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingDiagonal' => ['description' => 'The correct path is found for diagonal movement', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingStraight' => ['description' => 'The correct path is found for straight movement', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingDiagonalOneObstacle' => ['description' => 'The correct path is found for diagonal movement [one obstacle]', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarTest:testPathFindingDiagonalNoObstacle' => ['description' => 'The correct path is found for diagonal movement [no obstacle]', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest' => ['description' => 'JumpPoint path finding', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingDiagonal' => ['description' => 'The correct path is found for diagonal movement', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingStraight' => ['description' => 'The correct path is found for straight movement', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingDiagonalOneObstacle' => ['description' => 'The correct path is found for diagonal movement [one obstacle]', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointSearchTest:testPathFindingDiagonalNoObstacle' => ['description' => 'The correct path is found for diagonal movement [no obstacle]', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\GridTest' => ['description' => 'Grid for path finding', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDefault' => ['description' => 'By default a grid is empty', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testGridFromArray' => ['description' => 'A grid can be created from an array', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testNodeInputOutput' => ['description' => 'A node can be set and returned from the grid', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testOutOfBoundsNode' => ['description' => 'Out of bounds nodes cannot be returned', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightHorizontalNeighbors' => ['description' => 'All hoirzontal neighbors can be found correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightVerticalNeighbors' => ['description' => 'All vertical neighbors can be found correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightNoneNeighbors' => ['description' => 'No straight neighbors are found if no straight neighbors exist', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testStraightAllNeighbors' => ['description' => 'All straight neighbors can be found correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalLRNeighbors' => ['description' => 'All neighbors except blocked diagonal neighbors can be found correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalURNeighbors' => ['description' => 'All neighbors except blocked diagonal neighbors can be found correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalNoneNeighbors' => ['description' => 'No diagonal neighbors are found if no neighbors exist', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOnlyNeighbors' => ['description' => 'All diagonal neighbors can be found correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalAllNeighbors' => ['description' => 'All neighbors can be found correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOneObstacleNoBlockNeighbors' => ['description' => 'All neighbors can be found correctly even if one obstacle exists', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOneObstacleBlockNeighbors' => ['description' => 'No diagonal neighbors are found if they are blocked on two sides', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalOneObstacleAllNeighbors' => ['description' => 'All neighbors can be found correctly if no obstacles exists', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalNoObstacleBlockNeighbors' => ['description' => 'No diagonal neighbors are found if one obstacle exists', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\GridTest:testDiagonalNoObstacleAllNeighbors' => ['description' => 'All neighbors can be found correctly if no obstacles exist', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\HeuristicTest' => ['description' => 'Heuristic for path finding', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\HeuristicTest:testHeuristics' => ['description' => 'The heuristics return the corret metric results', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\NodeTest' => ['description' => 'Node on grid for path finding', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testDefault' => ['description' => 'The node has the expected values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testNodesWithEqualCoordinatesAreEqual' => ['description' => 'Nodes with equal coordinates are equal', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testNodesWithDifferentCoordinatesAreNotEqual' => ['description' => 'Nodes with different coordinates are not equal', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\NodeTest:testParentInputOutput' => ['description' => 'A parent node can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest' => ['description' => 'JumpPointNode on grid for path finding', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testDefault' => ['description' => 'The node has the expected values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testClosedInputOutput' => ['description' => 'The node can be set closed and checked', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testOpenedInputOutput' => ['description' => 'The node can be set opened and checked', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testTestedInputOutput' => ['description' => 'The node can be set tested and checked', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testGInputOutput' => ['description' => 'The g value cen be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testHInputOutput' => ['description' => 'The h value cen be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\JumpPointNodeTest:testFInputOutput' => ['description' => 'The f value cen be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest' => ['description' => 'JumpPointNode on grid for path finding', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testDefault' => ['description' => 'The node has the expected values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testClosedInputOutput' => ['description' => 'The node can be set closed and checked', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testOpenedInputOutput' => ['description' => 'The node can be set opened and checked', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testGInputOutput' => ['description' => 'The g value cen be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testHInputOutput' => ['description' => 'The h value cen be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\AStarNodeTest:testFInputOutput' => ['description' => 'The f value cen be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\PathFinding\PathTest' => ['description' => 'Path on grid', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testDefault' => ['description' => 'The path has the expected values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testDiagonalPathLength' => ['description' => 'The diagonal euclidean path length is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testStraightPathLength' => ['description' => 'The straight euclidean path length is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\PathFinding\PathTest:testPathExpansion' => ['description' => 'The path is correctly expanded in case only jump points are defined', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\BitonicSortTest' => ['description' => 'Bitonic sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BitonicSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BitonicSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BitonicSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\BubbleSortTest' => ['description' => 'Bubble sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BubbleSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BubbleSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BubbleSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\BucketSortTest' => ['description' => 'Bucket sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\BucketSortTest:testNoBuckets' => ['description' => 'If no buckets are specified the elements cannot be sorted and an empty result is returned', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest' => ['description' => 'CocktailShaker sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CocktailShakerSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\CombSortTest' => ['description' => 'Comb sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CombSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CombSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CombSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\CycleSortTest' => ['description' => 'Cycle sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CycleSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CycleSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\CycleSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\GnomeSortTest' => ['description' => 'Gnome sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\GnomeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\GnomeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\GnomeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\HeapSortTest' => ['description' => 'Heap sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\HeapSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\HeapSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\HeapSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\InsertionSortTest' => ['description' => 'Insertion sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\InsertionSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\InsertionSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\InsertionSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\IntroSortTest' => ['description' => 'Intro sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\IntroSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\IntroSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\IntroSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\MergeSortTest' => ['description' => 'Merge sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\MergeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\MergeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\MergeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest' => ['description' => 'OddEven sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\OddEvenSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\PancakeSortTest' => ['description' => 'Pancake sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\PancakeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\PancakeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\PancakeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\QuickSortTest' => ['description' => 'Quick sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\QuickSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\QuickSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\QuickSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\SelectionSortTest' => ['description' => 'Selection sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\SelectionSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\SelectionSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\SelectionSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\ShellSortTest' => ['description' => 'Shell sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\ShellSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\ShellSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\ShellSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\StoogeSortTest' => ['description' => 'Stooge sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\StoogeSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\StoogeSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\StoogeSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Algorithm\Sort\TimSortTest' => ['description' => 'Tim sort', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\TimSortTest:testSmallList' => ['description' => 'A list with one element returns the list with the element itself', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\TimSortTest:testSortASC' => ['description' => 'A list ot elements can be sorted in ASC order', 'type' => 'framework'],
    'phpOMS\tests\Algorithm\Sort\TimSortTest:testSortDESC' => ['description' => 'A list ot elements can be sorted in DESC order', 'type' => 'framework'],

    'phpOMS\tests\Asset\AssetManagerTest' => ['description' => 'Asset manager to handle/access assets', 'type' => 'framework'],
    'phpOMS\tests\Asset\AssetManagerTest:testAttributes' => ['description' => 'The manager has the expected member variables', 'type' => 'framework'],
    'phpOMS\tests\Asset\AssetManagerTest:testDefault' => ['description' => 'The manager has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Asset\AssetManagerTest:testAddAsset' => ['description' => 'An asset can be added to the manager', 'type' => 'framework'],
    'phpOMS\tests\Asset\AssetManagerTest:testRetrieveAsset' => ['description' => 'An asset can be retrieved from the manager', 'type' => 'framework'],
    'phpOMS\tests\Asset\AssetManagerTest:testInvalidAssetReplacement' => ['description' => 'An asset can only be added once to the manager (no duplication unless overwritten)', 'type' => 'framework'],
    'phpOMS\tests\Asset\AssetManagerTest:testAssetReplacement' => ['description' => 'An asset can be replaced upon request', 'type' => 'framework'],
    'phpOMS\tests\Asset\AssetManagerTest:testAssetRemove' => ['description' => 'An asset can be removed from the manager', 'type' => 'framework'],

    'phpOMS\tests\Auth\AuthTest' => ['description' => 'Asset manager to handle/access assets', 'type' => 'framework'],
    'phpOMS\tests\Auth\AuthTest:testAuthWithEmptyHttpSession' => ['description' => 'The default http session doesn\'t authenticate an account', 'type' => 'framework'],

    'phpOMS\tests\Business\Finance\DepreciationTest' => ['description' => 'Depreciation calculations', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testStraightLine' => ['description' => 'The straight line depreciation and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testArithmeticDegressivDepreciation' => ['description' => 'The arithmetic degressiv depreciation and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testArithmeticProgressivDepreciation' => ['description' => 'The arithmetic progressiv depreciation and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testGeometricProgressivDepreciation' => ['description' => 'The geometric progressiv depreciation and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\DepreciationTest:testGeometricDegressivDepreciation' => ['description' => 'The geometric degressiv depreciation and reverse value calculations are correct', 'type' => 'framework'],

    'phpOMS\tests\Business\Finance\FinanceFormulasTest' => ['description' => 'Finance formulas', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnualPercentageYield' => ['description' => 'The annual percentage yield (APY) and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueOfAnnuity' => ['description' => 'The future value of annuity (FVA) and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueOfAnnuityContinuousCompounding' => ['description' => 'The future value of annuity continuous compounding (FVACC) and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnuityPaymentPV' => ['description' => 'The annuity payment from the present value (PV) and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnuityPaymentFV' => ['description' => 'The annuity payment from the future value (FV) and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAnnutiyPaymentFactorPV' => ['description' => 'The annuity payment from the present value (PV) and reverse value calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueOfAnnuity' => ['description' => 'The present value of the annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueAnnuityFactor' => ['description' => 'The present value annuity factor of the annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueOfAnnuityDue' => ['description' => 'The due present value the annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueOfAnnuityDue' => ['description' => 'The due future value the annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testRelativeMarketShare' => ['description' => 'The relative market share calculations by shares and ales are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testAssetRatios' => ['description' => 'The asset ratio calculations are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testBalanceRatios' => ['description' => 'Balance ratio calculations for DII, Receivables/Turnover, and more are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDeptRatios' => ['description' => 'Dept ratios for dept coverage, dept to equity and dept to income are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testReturnOnBalancePositions' => ['description' => 'Return on balance statement positions are correct (e.g. return on assets, on equity)', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testBalancePLRatios' => ['description' => 'Balance / P&L ratios are correct (e.g. inventory turnover, net profit margin)', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testRatios' => ['description' => 'Not Implemented!!!', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testCompound' => ['description' => 'Compound calculations for interest, principal and periods are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testContinuousCompounding' => ['description' => 'Continuous compound calculations for interest, principal and periods are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testSimpleInterest' => ['description' => 'Calculations for interest, principal and periods are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDiscountedPaybackPeriod' => ['description' => 'The descounted payback period is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDoublingTime' => ['description' => 'Test the correct calculation of the growth rate in order to double and vice versa', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testDoublingTimeContinuousCompounding' => ['description' => 'Test the correct calculation of the growth rate in order to double and vice versa with continuous compounding', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testEquivalentAnnualAnnuity' => ['description' => 'Calculations for equivalent annual annuity are correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFreeCashFlowToEquity' => ['description' => 'The free cash flow to equity calculation is correct (how much cash is available after expenses and dept payments)', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFreeCashFlowToFirm' => ['description' => 'The free cash flow to firm calculation is correct (how much cash is available after expenses)', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValue' => ['description' => 'The future value calculation is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testFutureValueContinuousCompounding' => ['description' => 'The future value calculation including continuous compounding is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testValueFactor' => ['description' => 'The future value factor calculation is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGeometricMeanReturn' => ['description' => 'The calculation of the geometric mean of multiple return rates is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityFV' => ['description' => 'The calculation of the future value of the growing annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityPaymentFV' => ['description' => 'The calculation of the payment based on the future value of the growing annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityPV' => ['description' => 'The calculation of the present value of the growing annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingAnnuityPaymentPV' => ['description' => 'The calculation of the payment based on the present value of the growing annuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testGrowingPerpetuityPV' => ['description' => 'The calculation of the present value of the growing perpetuity is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testNetPresentValue' => ['description' => 'The calculation of the net present value is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testEmptyNetPresentValue' => ['description' => 'No cash flows in the net prsent value calculation result in 0', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testRealRateOfReturn' => ['description' => 'The calculation of the real rate of return is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testNetWorkingCapital' => ['description' => 'The calculation of the net working capital is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testNumberOfPeriodsPVFV' => ['description' => 'The periods to reach a future value based on the present value is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValue' => ['description' => 'The calculation of the present value is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\FinanceFormulasTest:testPresentValueContinuousCompounding' => ['description' => 'The calculation of the present value using continuous compounding is correct', 'type' => 'framework'],

    'phpOMS\tests\Business\Finance\LoanTest' => ['description' => 'Loan formulas', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\LoanTest:testLoanToDepositRatio' => ['description' => 'The loan to deposit ratio is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\LoanTest:testLoanToValueRatio' => ['description' => 'The loan to value ratio is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\LoanTest:testPaymentsOnBalloonLoan' => ['description' => 'The balloon loan payments are correct for a given balloon', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\LoanTest:testBalloonBalanceOfLoan' => ['description' => 'The balloon loan residual value (balloon) is correct for given payments', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\LoanTest:testLoanPayment' => ['description' => 'The loan payments are correct for a given interest rate and period [continuous compounding]', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\LoanTest:testRemainingBalanceLoan' => ['description' => 'The residual value is correct for a given payment amount, interest rate and period [continuous compounding]', 'type' => 'framework'],

    'phpOMS\tests\Business\Finance\StockBondsTest' => ['description' => 'Stock & bond related  formulas', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testBondEquivalentYield' => ['description' => 'The calculation the bond yield based on face value and price is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testExpectedReturnCAPM' => ['description' => 'The calculation of the return of the capital asset pricing model is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testCapitalGainsYield' => ['description' => 'The capital gains yield calculation is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testDilutedEarningsPerShare' => ['description' => 'The diluted earnings per share calculation is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testHoldingPeriodReturn' => ['description' => 'The calculation of the absolute return for multiple holding periods is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testTaxEquivalentYield' => ['description' => 'The tax equivalent yield is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testNetAssetValue' => ['description' => 'The net asset value is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testPresentValueOfStockConstantGrowth' => ['description' => 'The calculation of the present value of a stock with constant growth rate is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testTotalStockReturn' => ['description' => 'The total stock return including dividends and sales price is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testYieldToMaturity' => ['description' => 'The calculation of the yield of a bond is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testZeroCouponBondValue' => ['description' => 'The calculation of value of the zero coupon bond is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\StockBondsTest:testZeroCouponBondEffectiveYield' => ['description' => 'The calculation of the yield of a zero coupon bond is correct', 'type' => 'framework'],

    'phpOMS\tests\Business\Finance\LorenzkurveTest' => ['description' => 'Lorenz kurve', 'type' => 'framework'],
    'phpOMS\tests\Business\Finance\LorenzkurveTest:testGiniCoefficient' => ['description' => 'The gini coefficient calculation is correct', 'type' => 'framework'],

    'phpOMS\tests\Business\Marketing\MetricsTest' => ['description' => 'General marketing metrics', 'type' => 'framework'],
    'phpOMS\tests\Business\Marketing\MetricsTest:testCustomerRetention' => ['description' => 'Test the correctnes of the customer retention calculation', 'type' => 'framework'],

    'phpOMS\tests\Business\Marketing\NetPromoterScoreTest' => ['description' => 'Net promoter', 'type' => 'framework'],
    'phpOMS\tests\Business\Marketing\NetPromoterScoreTest:testDefault' => ['description' => 'The net promoter has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Business\Marketing\NetPromoterScoreTest:testScoreDetractorPassivePromotor' => ['description' => 'The net promotor score, detractors, passives and promotors are correct', 'type' => 'framework'],

    'phpOMS\tests\Business\Programming\MetricsTest' => ['description' => 'General programming metrics', 'type' => 'framework'],
    'phpOMS\tests\Business\Programming\MetricsTest:testABCMetric' => ['description' => 'Test correctness of the ABC calculation', 'type' => 'framework'],
    'phpOMS\tests\Business\Programming\MetricsTest:testCRAPMetric' => ['description' => 'Test correctness of CRAP score', 'type' => 'framework'],

    'phpOMS\tests\Business\Sales\MarketShareEstimationTest' => ['description' => 'Market share calculations', 'type' => 'framework'],
    'phpOMS\tests\Business\Sales\MarketShareEstimationTest:testZipfRank' => ['description' => 'The rank calculated with Zipf is correct', 'type' => 'framework'],
    'phpOMS\tests\Business\Sales\MarketShareEstimationTest:testZipfShare' => ['description' => 'The market share by rank calculated with Zipf is correct', 'type' => 'framework'],

    'phpOMS\tests\Config\OptionsTraitTest' => ['description' => 'Helper for managing otpions', 'type' => 'framework'],
    'phpOMS\tests\Config\OptionsTraitTest:testOptionTraitMembers' => ['description' => 'The option helper has the expected attributes', 'type' => 'framework'],
    'phpOMS\tests\Config\OptionsTraitTest:testDefault' => ['description' => 'The option helper has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Config\OptionsTraitTest:testAdd' => ['description' => 'Options can be added to the helper', 'type' => 'framework'],
    'phpOMS\tests\Config\OptionsTraitTest:testAddMultiple' => ['description' => 'Multiple options can be added to the helper in one go', 'type' => 'framework'],
    'phpOMS\tests\Config\OptionsTraitTest:testGetMultiple' => ['description' => 'Multiple options can be retrieved', 'type' => 'framework'],
    'phpOMS\tests\Config\OptionsTraitTest:testOverwrite' => ['description' => 'Options can be overwritten/changed', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Cache\CachePoolTest' => ['description' => 'Pool for caches', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testDefault' => ['description' => 'The pool has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testAdd' => ['description' => 'New cache connections can be added to the pool', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testOverwrite' => ['description' => 'Cache connections cannot be overwritten with a different cache connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testGet' => ['description' => 'Cache connections can be accessed with an identifier', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testGetDefault' => ['description' => 'By default a null cache is returned if no cache connection exists for the identifier', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testCreate' => ['description' => 'Cache connections can created by the pool and automatically get added but not overwritten', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testRemove' => ['description' => 'Cache connections can be removed from the pool', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\CachePoolTest:testRemoveInvalid' => ['description' => 'Removing a cache with an invalid identifier will result in no actions', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest' => ['description' => 'Factory for generating cache connections', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testCreateFileCache' => ['description' => 'The file cache can be created', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testCreateMemCached' => ['description' => 'The memcached cache can be created', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testCreateRedisCache' => ['description' => 'The redis cache can be created', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\ConnectionFactoryTest:testInvalidCacheType' => ['description' => 'An invalid cache type results in an exception', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest' => ['description' => 'File cache connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testDefault' => ['description' => 'The file cache connection has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testConnect' => ['description' => 'The connection to a dedicated cache directory can be established (none-exising directories get created)', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testSetInputOutput' => ['description' => 'Different cache data (types) can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testAddInputOutput' => ['description' => 'Cache data can bet added and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidOverwrite' => ['description' => 'Cache data cannot be added if it already exists', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testReplace' => ['description' => 'Existing cache data can be replaced', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidReplace' => ['description' => 'None-existing cache data cannot be replaced', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testDelete' => ['description' => 'Cache data can be deleted', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testStats' => ['description' => 'The cache correctly handles general cache information', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testFlush' => ['description' => 'The cache can be flushed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testUnexpiredInputOutput' => ['description' => 'Cache data can be set and returned with expiration limits', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testExpiredInputOutput' => ['description' => 'Expired cache data can be forced to return', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testForceExpiredInputOutput' => ['description' => 'Expired cache data cannot be returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidDeleteUnexpired' => ['description' => 'Unexpired cache data connot be delete if lower expiration is defined', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testDeleteExpired' => ['description' => 'Expired cache data can be deleted if higher expiration is defined', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testForceDeleteUnexpired' => ['description' => 'Unexpired data can be force deleted with lower expiration date', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testFlushExpired' => ['description' => 'Cach data can be flushed by expiration date', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testBadCacheStatus' => ['description' => 'A bad cache status will prevent all cache actions', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidCachePath' => ['description' => 'A invalid cache connection will throw an InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidDataTypeAdd' => ['description' => 'Adding a invalid data type will throw an InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\FileCacheTest:testInvalidDataTypeSet' => ['description' => 'Setting a invaliddata type will throw an InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest' => ['description' => 'Memcached connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testDefault' => ['description' => 'The memcached connection has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testConnect' => ['description' => 'The connection to a cache can be established (none-exising directories get created)', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testSetInputOutput' => ['description' => 'Different cache data (types) can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testAddInputOutput' => ['description' => 'Cache data can bet added and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testInvalidOverwrite' => ['description' => 'Cache data cannot be added if it already exists', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testReplace' => ['description' => 'Existing cache data can be replaced', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testInvalidReplace' => ['description' => 'None-existing cache data cannot be replaced', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testDelete' => ['description' => 'Cache data can be deleted', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testStats' => ['description' => 'The cache correctly handles general cache information', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testFlush' => ['description' => 'The cache can be flushed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testUnexpiredInputOutput' => ['description' => 'Cache data can be set and returned with expiration limits', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testExpiredInputOutput' => ['description' => 'Expired cache data can be forced to return', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testForceExpiredInputOutput' => ['description' => 'Expired cache data cannot be returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testInvalidDeleteUnexpired' => ['description' => 'Unexpired cache data connot be delete if lower expiration is defined', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testDeleteExpired' => ['description' => 'Expired cache data can be deleted if higher expiration is defined', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testForceDeleteUnexpired' => ['description' => 'Unexpired data can be force deleted with lower expiration date', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testFlushExpired' => ['description' => 'Cach data can be flushed by expiration date', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testBadCacheStatus' => ['description' => 'A bad cache status will prevent all cache actions', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testInvalidDataTypeAdd' => ['description' => 'Adding a invalid data type will throw an InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testInvalidDataTypeSet' => ['description' => 'Setting a invalid data type will throw an InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testInvalidCacheHost' => ['description' => 'A invalid host throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\MemCachedTest:testInvalidCachePort' => ['description' => 'A invalid port throws a InvalidConnectionConfigException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest' => ['description' => 'Redis cache connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testDefault' => ['description' => 'The redis cache connection has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testConnect' => ['description' => 'The connection to a cache can be established (none-exising directories get created)', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testSetInputOutput' => ['description' => 'Different cache data (types) can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testAddInputOutput' => ['description' => 'Cache data can bet added and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidOverwrite' => ['description' => 'Cache data cannot be added if it already exists', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testReplace' => ['description' => 'Existing cache data can be replaced', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidReplace' => ['description' => 'None-existing cache data cannot be replaced', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testDelete' => ['description' => 'Cache data can be deleted', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testStats' => ['description' => 'The cache correctly handles general cache information', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testFlush' => ['description' => 'The cache can be flushed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testUnexpiredInputOutput' => ['description' => 'Cache data can be set and returned with expiration limits', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testExpiredInputOutput' => ['description' => 'Expired cache data can be forced to return', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testForceExpiredInputOutput' => ['description' => 'Expired cache data cannot be returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidDeleteUnexpired' => ['description' => 'Unexpired cache data connot be delete if lower expiration is defined', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testDeleteExpired' => ['description' => 'Expired cache data can be deleted if higher expiration is defined', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testForceDeleteUnexpired' => ['description' => 'Unexpired data can be force deleted with lower expiration date', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testFlushExpired' => ['description' => 'Cach data can be flushed by expiration date', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testBadCacheStatus' => ['description' => 'A bad cache status will prevent all cache actions', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidDataTypeAdd' => ['description' => 'Adding a invalid data type will throw an InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidDataTypeSet' => ['description' => 'Setting a invalid data type will throw an InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidCacheHost' => ['description' => 'A invalid host throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidCachePort' => ['description' => 'A invalid port throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\RedisTest:testInvalidCacheDatabase' => ['description' => 'A invalid database throws a InvalidConnectionConfigException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Cache\Connection\NullCacheTest' => ['description' => 'Null cache connection if no cache is available', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cache\Connection\NullCacheTest:testDefault' => ['description' => 'The default cache has the expected default values after initialization', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Cookie\CookieJarTest' => ['description' => 'CookieJar to handle http cookies', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testDefault' => ['description' => 'The cookie jar has the expected default values and functionality after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testCookieInputOutput' => ['description' => 'Cookie values can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testOverwrite' => ['description' => 'Cookie values can be forced to overwrite', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testInvalidOverwrite' => ['description' => 'Cookie values cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testRemove' => ['description' => 'Cookie values can be removed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testInvalidRemove' => ['description' => 'None-existing cookie values cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testDeleteLocked' => ['description' => 'Values cannot be removed from a locked cookie and throws a LockException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Cookie\CookieJarTest:testSaveLocked' => ['description' => 'A locked coockie cannot be saved and throws a LockException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\DatabasePoolTest' => ['description' => 'Pool for database connections', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DatabasePoolTest:testDefault' => ['description' => 'The pool has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DatabasePoolTest:testCreateConnection' => ['description' => 'A database connection can be created by the pool', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DatabasePoolTest:testInvalidOverwrite' => ['description' => 'Database connections cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DatabasePoolTest:testAddConnections' => ['description' => 'Existing database connections can be added to the pool', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DatabasePoolTest:testRemoveConnections' => ['description' => 'Database connections can be removed from the pool', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DatabasePoolTest:testInvalidRemove' => ['description' => 'Invalid database connections cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DatabasePoolTest:testDefaultConnection' => ['description' => 'The first connection added to the pool is the default connection', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest' => ['description' => 'Datamapper for database models', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testDefault' => ['description' => 'The datamapper has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testCreate' => ['description' => 'The datamapper sucessfully creates a database entry of a model', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testCreateArray' => ['description' => 'The datamapper sucessfully creates a database entry of array data', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testRead' => ['description' => 'The datamapper sucessfully returns a database entry as model', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testReadArray' => ['description' => 'The datamapper sucessfully returns a database entry as array', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testUpdate' => ['description' => 'The datamapper sucessfully updates a database entry from a model', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testUpdateArray' => ['description' => 'The datamapper sucessfully updates a database entry from an array', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\DataMapperAbstractTest:testDelete' => ['description' => 'The datamapper sucessfully deletes a database entry from a model', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\SchemaMapperTest' => ['description' => 'Mapper for the database schema', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\SchemaMapperTest:testTables' => ['description' => 'The tables can be returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\SchemaMapperTest:testFields' => ['description' => 'The fields of a table can be returned', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Connection\ConnectionFactoryTest' => ['description' => 'Database connection factory', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\ConnectionFactoryTest:testCreateMysql' => ['description' => 'The mysql connection can be successfully created', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\ConnectionFactoryTest:testCreatePostgres' => ['description' => 'The postgresql connection can be successfully created', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\ConnectionFactoryTest:testCreateSqlsrv' => ['description' => 'The sqlserver connection can be successfully created', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\ConnectionFactoryTest:testCreateSqlite' => ['description' => 'The sqlite connection can be successfully created', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\ConnectionFactoryTest:testInvalidDatabaseType' => ['description' => 'A invalid database type throws a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest' => ['description' => 'Mysql connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testConnect' => ['description' => 'Valid mysql connection data result in a valid database connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidDatabaseType' => ['description' => 'A missing database type throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidHost' => ['description' => 'A missing database host throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidPort' => ['description' => 'A missing database port throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidDatabase' => ['description' => 'A missing database throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidLogin' => ['description' => 'A missing database login throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidPassword' => ['description' => 'A missing database password throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidDatabaseTypeName' => ['description' => 'A invalid database type throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\MysqlConnectionTest:testInvalidDatabaseName' => ['description' => 'A invalid database throws a InvalidConnectionConfigException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest' => ['description' => 'Postgresql connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testConnect' => ['description' => 'Valid postgresql connection data result in a valid database connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testInvalidDatabaseType' => ['description' => 'A missing database type throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testInvalidHost' => ['description' => 'A missing database host throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testInvalidPort' => ['description' => 'A missing database port throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testInvalidDatabase' => ['description' => 'A missing database throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testInvalidLogin' => ['description' => 'A missing database login throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testInvalidPassword' => ['description' => 'A missing database password throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\PostgresConnectionTest:testInvalidDatabaseTypeName' => ['description' => 'A invalid database type throws a InvalidConnectionConfigException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Connection\SQLiteConnectionTest' => ['description' => 'Postgresql connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SQLiteConnectionTest:testConnect' => ['description' => 'Valid sqlite connection data result in a valid database connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SQLiteConnectionTest:testInvalidDatabaseType' => ['description' => 'A missing database type throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SQLiteConnectionTest:testInvalidDatabase' => ['description' => 'A missing database throws a InvalidConnectionConfigException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest' => ['description' => 'Sqlserver connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testConnect' => ['description' => 'Valid sqlserver connection data result in a valid database connection', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidDatabaseType' => ['description' => 'A missing database type throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidHost' => ['description' => 'A missing database host throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidPort' => ['description' => 'A missing database port throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidDatabase' => ['description' => 'A missing database throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidLogin' => ['description' => 'A missing database login throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidPassword' => ['description' => 'A missing database password throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidDatabaseTypeName' => ['description' => 'A invalid database type throws a InvalidConnectionConfigException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Connection\SqlServerConnectionTest:testInvalidDatabaseName' => ['description' => 'A invalid database throws a InvalidConnectionConfigException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Query\BuilderTest' => ['description' => 'Query builder for sql queries', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlSelect' => ['description' => 'Mysql selects form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlOrder' => ['description' => 'Mysql orders form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlOffsetLimit' => ['description' => 'Mysql offsets and limits form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlGroup' => ['description' => 'Mysql groupings form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlWheres' => ['description' => 'Mysql wheres form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlJoins' => ['description' => 'Mysql joins form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlInsert' => ['description' => 'Mysql inserts form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlDelete' => ['description' => 'Mysql deletes form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testMysqlUpdate' => ['description' => 'Mysql updates form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testRawInputOutput' => ['description' => 'Raw queries get output as defined', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testReadOnlyRaw' => ['description' => 'Read only queries don\'t allow drops', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testReadOnlyInsert' => ['description' => 'Read only queries don\'t allow inserts', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testReadOnlyUpdate' => ['description' => 'Read only queries don\'t allow updates', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testReadOnlyDelete' => ['description' => 'Read only queries don\'t allow deletes', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidSelectParameter' => ['description' => 'Invalid select types throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidFromParameter' => ['description' => 'Invalid from types throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidGroupByParameter' => ['description' => 'Invalid group types throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidWhereOperator' => ['description' => 'Invalid where operators throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidJoinTable' => ['description' => 'Invalid join types throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidJoinOperator' => ['description' => 'Invalid join operators throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidOrderType' => ['description' => 'Invalid order types throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\BuilderTest:testInvalidOrderColumnType' => ['description' => 'Invalid order column types throw a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Query\Grammar\GrammarTest' => ['description' => 'Basic sql query grammar', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\Grammar\GrammarTest:testDefault' => ['description' => 'The grammar has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\Grammar\GrammarTest:testPrefixInputOutput' => ['description' => 'The grammar can define a default table prefix and return this value', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Query\Grammar\MysqlGrammarTest' => ['description' => 'Mysql sql query grammar', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\Grammar\MysqlGrammarTest:testDefault' => ['description' => 'The grammar has the expected default values after initialization', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Query\Grammar\SQLiteGrammarTest' => ['description' => 'SQLite sql query grammar', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Query\Grammar\SQLiteGrammarTest:testDefault' => ['description' => 'The grammar has the expected default values after initialization', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Schema\BuilderTest' => ['description' => 'Query builder for sql schemas', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\BuilderTest:testMysqlDrop' => ['description' => 'Mysql drops form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\BuilderTest:testMysqlShowTables' => ['description' => ' Mysql show tables form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\BuilderTest:testMysqlShowFields' => ['description' => 'Mysql show fields form a valid query', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\BuilderTest:testMysqlCreateTable' => ['description' => 'Mysql create tables form a valid query', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Schema\Grammar\GrammarTest' => ['description' => 'Basic sql query grammar', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\Grammar\GrammarTest:testDefault' => ['description' => 'The grammar has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\Grammar\GrammarTest:testPrefixInputOutput' => ['description' => 'The grammar can define a default table prefix and return this value', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Schema\Grammar\MysqlGrammarTest' => ['description' => 'Mysql sql schema grammar', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\Grammar\MysqlGrammarTest:testDefault' => ['description' => 'The grammar has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\Grammar\MysqlGrammarTest:testSchemaInputOutput' => ['description' => 'The the grammar correctly creates and returns a database table', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\Grammar\MysqlGrammarTest:testDelete' => ['description' => 'The grammar correctly deletes a table', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Database\Schema\Grammar\SQLiteGrammarTest' => ['description' => 'SQLite sql schema grammar', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Database\Schema\Grammar\SQLiteGrammarTest:testDefault' => ['description' => 'The grammar has the expected default values after initialization', 'type' => 'framework'],

    'phpOMS\tests\DataStorage\Session\HttpSessionTest' => ['description' => 'Session data handler for http sessions', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testDefault' => ['description' => 'The session has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testInputOutput' => ['description' => 'Session data can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testOverwrite' => ['description' => 'Session data can be forced to overwrite', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testInvalidOverwrite' => ['description' => 'Session data cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testRemove' => ['description' => 'Session data can be removed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testInvalidRemove' => ['description' => 'None-existing session data cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testSessionIdInputOutput' => ['description' => 'A session id can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testLockInputOutput' => ['description' => 'A session can be locked for changes', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testLockInvalidSet' => ['description' => 'A locked session cannot add or change data', 'type' => 'framework'],
    'phpOMS\tests\DataStorage\Session\HttpSessionTest:testLockInvalidRemove' => ['description' => 'A locked session cannot remove data', 'type' => 'framework'],

    'phpOMS\tests\Dispatcher\DispatcherTest' => ['description' => 'Dispatcher for executing request endpoints', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testClosure' => ['description' => 'The disptacher can dispatch a function/closure', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testPathMethod' => ['description' => 'The disptacher can dispatch a method as string representation of a controller', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testPathMethodInArray' => ['description' => 'The disptacher can dispatch a method as array representation of a controller', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testPathStatic' => ['description' => 'The disptacher can dispatch a static method as string representation', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testArray' => ['description' => 'The disptacher can dispatch multiple destinations after another', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testInvalidDestination' => ['description' => 'A invalid destination type throws UnexpectedValueException', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testInvalidControllerPath' => ['description' => 'A invalid controller path thorws a PathException', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testInvalidControllerFunction' => ['description' => 'A invalid function path thorws a Exception', 'type' => 'framework'],
    'phpOMS\tests\Dispatcher\DispatcherTest:testInvalidControllerString' => ['description' => 'A malformed dispatch path thorws UnexpectedValueException', 'type' => 'framework'],

    'phpOMS\tests\Event\EventManagerTest' => ['description' => 'Event manager for managing and executing events', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testDefault' => ['description' => 'The event manager has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testAdd' => ['description' => 'New events can be added', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testAddMultiple' => ['description' => 'Multiple callbacks can be added to an event', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testDispatchAfterAllConditions' => ['description' => 'An event only gets executed if all conditions and sub conditions are met', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testDispatchAfterSomeConditionsInvalid' => ['description' => 'An event doesn\'t get executed if not all conditions and sub conditions are met', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testInvalidEventTrigger' => ['description' => 'None-existing events cannot be executed/triggered', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testReset' => ['description' => 'An event can be defined to reset after all conditions and subconditions are met. Then all conditions and sub conditions must be met again before it gets triggered again', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testNoeReset' => ['description' => 'An event can be defined to not reset after all conditions and subconditions are met. Then an event can be triggered any time.', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testDetach' => ['description' => 'An event can be manually removed/detatched', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testInvalidDetach' => ['description' => 'None-existing events cannot be manually removed/detatched', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testRemove' => ['description' => 'An event can be defined to automatically remove itself after all conditions and subconditions are met and it is executed', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testImportEvents' => ['description' => 'Events can be imported from a file', 'type' => 'framework'],
    'phpOMS\tests\Event\EventManagerTest:testInvalidImportEvents' => ['description' => 'Invalid event files cannot be imported and return a failure', 'type' => 'framework'],

    'phpOMS\tests\Localization\L11nManagerTest' => ['description' => 'Localization manager for view templates', 'type' => 'framework'],
    'phpOMS\tests\Localization\L11nManagerTest:testDefault' => ['description' => 'The localization manager has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Localization\L11nManagerTest:testLanguageInputOutput' => ['description' => 'Language data can be loaded and output as plain text or html', 'type' => 'framework'],
    'phpOMS\tests\Localization\L11nManagerTest:testInvalidModule' => ['description' => 'Loading language for an invalid module throws Exception', 'type' => 'framework'],
    'phpOMS\tests\Localization\L11nManagerTest:testLanguageFile' => ['description' => 'Language data can be loaded from a file', 'type' => 'framework'],

    'phpOMS\tests\Localization\LocalizationTest' => ['description' => 'Localization for information such as language, currency, location, language specific formatting etc.', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testDefault' => ['description' => 'The localization has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testLanguageInputOutput' => ['description' => 'The language can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidLanguage' => ['description' => 'Setting a invalid language code throws InvalidEnumValue', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testCountryInputOutput' => ['description' => 'The country can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidCountry' => ['description' => 'Setting a invalid country code throws InvalidEnumValue', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testTimezoneInputOutput' => ['description' => 'The timezone can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidTimezone' => ['description' => 'Setting a invalid timezone code throws InvalidEnumValue', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testCurrencyInputOutput' => ['description' => 'The currency can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidCurrency' => ['description' => 'Setting a invalid currency code throws InvalidEnumValue', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testDatetimeInputOutput' => ['description' => 'The datetime can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testDecimalInputOutput' => ['description' => 'The decimal can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testThousandsInputOutput' => ['description' => 'The thousands can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testAngleInputOutput' => ['description' => 'The angle can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidAngle' => ['description' => 'Setting a invalid angle throws InvalidEnumValue', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testTemperatureInputOutput' => ['description' => 'The temperature can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidTemperature' => ['description' => 'Setting a invalid temperature throws InvalidEnumValue', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testWeightInputOutput' => ['description' => 'The weight can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testLengthInputOutput' => ['description' => 'The length can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testAreaInputOutput' => ['description' => 'The area can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testVolumeInputOutput' => ['description' => 'The volume can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testSpeedInputOutput' => ['description' => 'The speed can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testLocalizationLoading' => ['description' => 'Localization data can be loaded from a locale file', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidCountryLocalizationLoading' => ['description' => 'If no locale file for a specified country exists or a wild card country is used the first match of a locale file based on the defined language is loaded', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testMissingLocalizationLoading' => ['description' => 'By default the english locale file will be loaded if no other locale file can be found', 'type' => 'framework'],
    'phpOMS\tests\Localization\LocalizationTest:testInvalidLocalizationLoading' => ['description' => 'Loading localization data from a file with invalid language throws InvalidEnumValue', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\CityMapperTest' => ['description' => 'City database mapper', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\CityMapperTest:testR' => ['description' => 'The model can be read from the database', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\CityTest' => ['description' => 'City database model', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\CityTest:testDefaults' => ['description' => 'The model has the expected and default values', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\CountryMapperTest' => ['description' => 'Country database mapper', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\CountryMapperTest:testR' => ['description' => 'The model can be read from the database', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\CountryTest' => ['description' => 'Country database model', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\CountryTest:testDefaults' => ['description' => 'The model has the expected and default values', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\CurrencyMapperTest' => ['description' => 'Currency database mapper', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\CurrencyMapperTest:testR' => ['description' => 'The model can be read from the database', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\CurrencyTest' => ['description' => 'Currency database model', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\CurrencyTest:testDefaults' => ['description' => 'The model has the expected and default values', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\IbanMapperTest' => ['description' => 'Iban database mapper', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\IbanMapperTest:testR' => ['description' => 'The model can be read from the database', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\IbanTest' => ['description' => 'Iban database model', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\IbanTest:testDefaults' => ['description' => 'The model has the expected and default values', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\LanguageMapperTest' => ['description' => 'Language database mapper', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\LanguageMapperTest:testR' => ['description' => 'The model can be read from the database', 'type' => 'framework'],

    'phpOMS\tests\Localization\Defaults\LanguageTest' => ['description' => 'Language database model', 'type' => 'framework'],
    'phpOMS\tests\Localization\Defaults\LanguageTest:testDefaults' => ['description' => 'The model has the expected and default values', 'type' => 'framework'],

    'phpOMS\tests\Localization\MoneyTest' => ['description' => 'Money datatype for internal representation of money', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testDefaultMemberVariables' => ['description' => 'The datatype has the expected member variables and default values', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyDefaultStringRepresentation' => ['description' => 'The datatype returns the correct default string representation (#,###.##)', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyDecimalPlaces' => ['description' => 'The datatype returns up to 4 decimal places if requested (#,###.####)', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyStringToIntConversion' => ['description' => 'The datatype returns the correct integer representation of a string with up to 4 decimal places also considering differences in decimal and thousands characters if requested for different localizations', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testCorrectValueChange' => ['description' => 'The datatype allows to modify the value by overwriting it with new string characters or integers correctly', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyLocalization' => ['description' => 'The datatype can print out money with different thousands, decimals and currency symbols as per definition by the user', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneySerialization' => ['description' => 'The string character input is correctly serialized to the numeric representation', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyUnserialization' => ['description' => 'The string character input is correctly unserialized from a numeric representation', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyAddSub' => ['description' => 'The datatype correctly adds and subtracts the different money representations in string, numeric or Money type', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyMultDiv' => ['description' => 'The datatype correctly multiplies and divides the money with numerics', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyAbsoluteValue' => ['description' => 'The datatype correctly handles the absolute value', 'type' => 'framework'],
    'phpOMS\tests\Localization\MoneyTest:testMoneyPower' => ['description' => 'The datatype correctly handles the power operator', 'type' => 'framework'],

    'phpOMS\tests\Log\FileLoggerTest' => ['description' => 'File logger for saving log information in a local file', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testDefault' => ['description' => 'The logger has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testNamedLogFile' => ['description' => 'A log file for the output can be specified for the file logger', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testUnnamedLogFile' => ['description' => 'If no log file name is specified a log file per date is created', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testNoFileIfNoLog' => ['description' => 'If no logs are performed no log file will be created', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testLogInputOutput' => ['description' => 'Logs with different levels get correctly stored in the log file', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testPerpetrator' => ['description' => 'Log files can be analyzed for the highest perpetrator (IP address)', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testReadLogs' => ['description' => 'Logs can be read from the log file', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testInvalidReadLogs' => ['description' => 'Invalid log reads return empty log data', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testReadLine' => ['description' => 'A line can be read from a log file', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testInvalidReadLine' => ['description' => 'None-existing lines return on read empty log data', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testVerboseLogger' => ['description' => 'A verbose file logger automatically outputs log data', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testVerboseLog' => ['description' => 'A verbose console log outputs log data', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testTiming' => ['description' => 'The logger can perform timings for internal duration logging', 'type' => 'framework'],
    'phpOMS\tests\Log\FileLoggerTest:testLogException' => ['description' => 'A invalid log type throws a InvalidEnumValue', 'type' => 'framework'],

    'phpOMS\tests\Math\Functions\FibunacciTest' => ['description' => 'Fibunacci functions', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FibunacciTest:testFibunacci' => ['description' => 'A number can be checked if it is a fibunacci number', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FibunacciTest:testFibunacciByKey' => ['description' => 'A fibunacci number can be returned by index', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FibunacciTest:testBinet' => ['description' => 'The binet formula returns fibunacci numbers', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FibunacciTest:testBinetFib' => ['description' => 'The binet formula and the fibunacci formula return the same results', 'type' => 'framework'],

    'phpOMS\tests\Math\Functions\FunctionsTest' => ['description' => 'Various math functions', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FunctionsTest:testFactorial' => ['description' => 'The factorial of a number can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FunctionsTest:testBinomialCoefficient' => ['description' => 'The binomial coefficient can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FunctionsTest:testAckermann' => ['description' => 'The ackerman function can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FunctionsTest:testMultiplicativeInverseModulo' => ['description' => 'The multiplicative inverse module can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FunctionsTest:testOdd' => ['description' => 'A number can be checked if it is odd', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FunctionsTest:testEven' => ['description' => 'A number can be checked if it is even', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\FunctionsTest:testCircularPosition' => ['description' => 'The relative number can be calculated on a circular number system (e.g. month in a diverging business year)', 'type' => 'framework'],

    'phpOMS\tests\Math\Functions\GammaTest' => ['description' => 'Gamma function', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\GammaTest:testFactorial' => ['description' => 'The gamma function can be calculated for integers', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\GammaTest:testApproximationSpouge' => ['description' => 'The gamma function can be approximated with the spouge formula', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\GammaTest:testApproximationStirling' => ['description' => 'The gamma function can be approximated with the stirling formula', 'type' => 'framework'],
    'phpOMS\tests\Math\Functions\GammaTest:testApproximationLanzos' => ['description' => 'The gamma function can be approximated with the lanzos formula', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\ConvexHull\MonotoneChainTest' => ['description' => 'Monotone chain', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\ConvexHull\MonotoneChainTest:testMonotoneChain' => ['description' => 'A convedx hull can be formed from multiple points on a plane', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D2\CircleTest' => ['description' => 'Circle shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\CircleTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\CircleTest:testPerimeter' => ['description' => 'The perimeter can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\CircleTest:testRadiusBySurface' => ['description' => 'The radius can be caluclated with the surface', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\CircleTest:testRadiusByPerimeter' => ['description' => 'The radius can be caluclated with the perimeter', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D2\EllipseTest' => ['description' => 'Ellipse shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\EllipseTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\EllipseTest:testPerimeter' => ['description' => 'The perimeter can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest' => ['description' => 'Polygon shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testPoint' => ['description' => 'The location of a point can be checked relative to a polygon', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testInteriorAngle' => ['description' => 'The interior angle can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testExteriorAngle' => ['description' => 'The exterior angle can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testPerimeter' => ['description' => 'The perimeter can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testArea' => ['description' => 'The area can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testBarycenter' => ['description' => 'The barycenter can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testRegularAreaByLength' => ['description' => 'The regular area can be calculated with the side length', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\PolygonTest:testRegularAreaByRadius' => ['description' => 'The regular area can be calculated with the radius', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D2\QuadrilateralTest' => ['description' => 'Quadrilateral shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\QuadrilateralTest:testArea' => ['description' => 'The area can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D2\RectangleTest' => ['description' => 'Rectangle shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\RectangleTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\RectangleTest:testPerimeter' => ['description' => 'The perimeter can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\RectangleTest:testDiagonal' => ['description' => 'The diagonal can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D2\TrapezoidTest' => ['description' => 'Trapezoid shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TrapezoidTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TrapezoidTest:testPerimeter' => ['description' => 'The perimeter can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TrapezoidTest:testHeight' => ['description' => 'The height can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TrapezoidTest:testSideLength' => ['description' => 'The side lengths can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D2\TriangleTest' => ['description' => 'Triangle shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TriangleTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TriangleTest:testPerimeter' => ['description' => 'The perimeter can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TriangleTest:testHeight' => ['description' => 'The height can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D2\TriangleTest:testHypot' => ['description' => 'The hypotenuse can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D3\ConeTest' => ['description' => 'Cone shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\ConeTest:testVolume' => ['description' => 'The volume can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\ConeTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\ConeTest:testSlantHeight' => ['description' => 'The slant height can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\ConeTest:testHeightFromVolume' => ['description' => 'The height can be calculated with the volume', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D3\CuboidTest' => ['description' => 'Cuboid shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\CuboidTest:testVolume' => ['description' => 'The volume can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\CuboidTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D3\CylinderTest' => ['description' => 'Cylinder shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\CylinderTest:testVolume' => ['description' => 'The volume can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\CylinderTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\CylinderTest:testLateralSurface' => ['description' => 'The lateral surface can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D3\PrismTest' => ['description' => 'Prism shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\PrismTest:testVolumeByLength' => ['description' => 'The volume can be calculated with the length', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\PrismTest:testVolumeByRadius' => ['description' => 'The volume can be calculated with the radius', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\PrismTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D3\RectangularPyramidTest' => ['description' => 'Rectangular pyramid shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\RectangularPyramidTest:testVolume' => ['description' => 'The volume can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\RectangularPyramidTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\RectangularPyramidTest:testLateralSurface' => ['description' => 'The lateral surface can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D3\SphereTest' => ['description' => 'Sphere shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\SphereTest:testVolume' => ['description' => 'The volume can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\SphereTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\SphereTest:testDistanceOnSphere' => ['description' => 'The distance on a sphere can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\SphereTest:testGetSphereByRadius' => ['description' => 'The sphere can be created by its radius', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\SphereTest:testGetSphereByVolume' => ['description' => 'The sphere can be created by its volume', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\SphereTest:testGetSphereBySurface' => ['description' => 'The sphere can be created by its surface', 'type' => 'framework'],

    'phpOMS\tests\Math\Geometry\Shape\D3\TetrahedronTest' => ['description' => 'Tetrahedron shape', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\TetrahedronTest:testVolume' => ['description' => 'The volume can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\TetrahedronTest:testSurface' => ['description' => 'The surface can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Geometry\Shape\D3\TetrahedronTest:testFaceArea' => ['description' => 'The face area can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Matrix\MatrixTest' => ['description' => 'Matrix operations'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testBase' => ['description' => 'A matrix can return its dimension', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testMultMatrix' => ['description' => 'A matrix can be right-hand multiplicated with a matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testMultMatrixScalar' => ['description' => 'A matrix can be right-hand multiplicated with a scalar', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testAddScalar' => ['description' => 'A scalar can be added to every matrix element', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testSubScalar' => ['description' => 'A scalar can be subtracted from every matrix element', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testAddMatrix' => ['description' => 'Two matrices can be added to each other', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testSubMatrix' => ['description' => 'Two matrices can be subtracted from each other', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testDet' => ['description' => 'The determinant of a matrix can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testSymmetry' => ['description' => 'A symmetric matrix can be validated for symmetry', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidSymmetry' => ['description' => 'A none-symmetric matrix cannot be validated for symmetry', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testTranspose' => ['description' => 'A matrix can be transposed', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testSolve' => ['description' => 'A matrix equation Ax = b can be solved for x', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testRank' => ['description' => 'The rank of a matrix can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testUpperTriangular' => ['description' => 'The upper triangular matrix can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testMatrixInputOutput' => ['description' => 'The matrix elements can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testArrayAccess' => ['description' => 'A matrix can be accessed like a 1-dimensional array', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testMatrixExtract' => ['description' => 'Sub matrices can be extracted from a matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidSetIndexException' => ['description' => 'Setting a matrix element outside of the dimensions throws a InvalidDimensionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidGetIndexException' => ['description' => 'Returning a matrix element outside of the dimensions throws a InvalidDimensionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidSub' => ['description' => 'Subtracting a invalid data type from a matrix throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidAdd' => ['description' => 'Adding a invalid data type to a matrix throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidMult' => ['description' => 'Multiplicating a invalid data type with a matrix throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidDimensionAdd' => ['description' => 'Adding a matrix with a different dimension to a matrix throws a InvalidDimensionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidDimensionSub' => ['description' => 'Subtracting a matrix from a different dimension to a matrix throws a InvalidDimensionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\MatrixTest:testInvalidDimensionMult' => ['description' => 'SMultiplicating a matrix with a different n x m dimension to a matrix throws a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Matrix\IdentityMatrixTest' => ['description' => 'Matrix operations'],
    'phpOMS\tests\Math\Matrix\IdentityMatrixTest:testIdentity' => ['description' => 'The identity matrix is the identity', 'type' => 'framework'],

    'phpOMS\tests\Math\Matrix\VectorTest' => ['description' => 'Vector operations'],
    'phpOMS\tests\Math\Matrix\VectorTest:testDefault' => ['description' => 'The vector has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\VectorTest:testValueInputOutput' => ['description' => 'The vector values can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\VectorTest:testDim' => ['description' => 'A invalid vector throws a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Matrix\CholeskyDecompositionTest' => ['description' => 'Cholesky decomposition'],
    'phpOMS\tests\Math\Matrix\CholeskyDecompositionTest:testDecomposition' => ['description' => 'The decomposition can be created and the original matrix can be computed', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\CholeskyDecompositionTest:testL' => ['description' => 'The decomposition matrix has the expected values', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\CholeskyDecompositionTest:testSymmetricPositive' => ['description' => 'A matrix can be checked for symmetric positivity', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\CholeskyDecompositionTest:testSolve' => ['description' => 'The equation Ax = b can be solved', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\CholeskyDecompositionTest:testInvalidDimension' => ['description' => 'A invalid vector throws a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition' => ['description' => 'Eigenvalue decomposition'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testSymmetricSymmetryMatrix' => ['description' => 'A matrix can be checked for symmetry', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testSymmetricMatrixEigenvalues' => ['description' => 'The eigenvalues can be calculated for a symmetric matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testSymmetricMatrixV' => ['description' => 'The V matrix of the decomposition can be calculated for a symmetric matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testSymmetricMatrixD' => ['description' => 'The D matrix of the decomposition can be calculated for a symmetric matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testNonSymmetricMatrixEigenvalues' => ['description' => 'The eigenvalues can be calculated for a none-symmetric matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testNonSymmetricMatrixV' => ['description' => 'The V matrix of the decomposition can be calculated for a none-symmetric matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testNonSymmetricMatrixD' => ['description' => 'The D matrix of the decomposition can be calculated for a none-symmetric matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testCompositeSymmetric' => ['description' => 'The decomposition can be created and the original matrix can be computed for a symmetric matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\EigenvalueDecomposition:testCompositeNonSymmetric' => ['description' => 'The decomposition can be created and the original matrix can be computed for a none-symmetric matrix', 'type' => 'framework'],

    'phpOMS\tests\Math\Matrix\LUDecompositionTest' => ['description' => 'LU decomposition'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testL' => ['description' => 'The L matrix of the decomposition can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testU' => ['description' => 'The U matrix of the decomposition can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testSingularity' => ['description' => 'The matrix can be checked for singularity', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testSolve' => ['description' => 'The equation Ax = b can be solved for a none-singular matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testSolveOfSingularMatrix' => ['description' => 'The equation Ax = b can be solved for a singular matrix', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testPivot' => ['description' => 'The pivots of the decomposition can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testComposition' => ['description' => 'The decomposition can be created and the original matrix can be computed', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\LUDecompositionTest:testInvalidDimension' => ['description' => 'A invalid vector throws a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Matrix\QRDecompositionTest' => ['description' => 'QR decomposition'],
    'phpOMS\tests\Math\Matrix\QRDecompositionTest:testRank' => ['description' => 'A matrix can be checked if it has a full rank', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\QRDecompositionTest:testQ' => ['description' => 'The Q matrix of the decomposition can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\QRDecompositionTest:testR' => ['description' => 'The R matrix of the decomposition can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\QRDecompositionTest:testComposition' => ['description' => 'The decomposition can be created and the original matrix can be computed', 'type' => 'framework'],
    'phpOMS\tests\Math\Matrix\QRDecompositionTest:testSolve' => ['description' => 'The equation Ax = b can be solved', 'type' => 'framework'],

    'phpOMS\tests\Math\Number\ComplexTest' => ['description' => 'Complex number operations'],
    'phpOMS\tests\Math\Number\ComplexTest:testDefault' => ['description' => 'The complex number has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testConstructorInputOutput' => ['description' => 'The real and imaginary part can be set during initialization and returned', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testAddComplex' => ['description' => 'A complex number can be added to a complex number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testAddReal' => ['description' => 'A real number can be added to a complex number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testSubComplex' => ['description' => 'A complex number can be subtracted from a complex number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testSubReal' => ['description' => 'A real number can be subtracted from a complex number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testMultComplex' => ['description' => 'A complex number can be multiplicated with a complex number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testMultReal' => ['description' => 'A real number can be multiplicated with a complex number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testDivComplex' => ['description' => 'A complex number can be devided by a complex number number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testDivReal' => ['description' => 'A complex number can be devided by a real number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testConjugate' => ['description' => 'A complex number can be conjugated', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testReciprocal' => ['description' => 'The reciprocal of a complex number can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testSquare' => ['description' => 'A complex number can be squared', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testPower' => ['description' => 'The real power of a complex number can be caluclated', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testAbs' => ['description' => 'The absolute value of a complex number can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testSqrt' => ['description' => 'The square root of a complex number can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testInvalidAdd' => ['description' => 'A invalid type addition throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testInvalidSub' => ['description' => 'A invalid type subtraction throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testInvalidMult' => ['description' => 'A invalid type cannot multiplication throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testInvalidDiv' => ['description' => 'A invalid type division throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\ComplexTest:testInvalidPow' => ['description' => 'The power of a invalid type throws a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\Math\Number\IntegerTest' => ['description' => 'Integer operations'],
    'phpOMS\tests\Math\Number\IntegerTest:testIsInteger' => ['description' => 'A value can be checked to be an intager', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\IntegerTest:testFactorization' => ['description' => 'An integer can be factorized', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\IntegerTest:testPollardsRho' => ['description' => 'The Pollard\'s Roh algorithm calculates a factor of an integer', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\IntegerTest:testFermatFactor' => ['description' => 'The Fermat factorization calculates a factor of an integer', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\IntegerTest:testInvalidFermatParameter' => ['description' => 'A even number for the fermat factorization throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\IntegerTest:testGCD' => ['description' => 'The greatest common divisor can be calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Number\NaturalTest' => ['description' => 'Natural number operations'],
    'phpOMS\tests\Math\Number\NaturalTest:testIsNatural' => ['description' => 'A number can be checked to be natural', 'type' => 'framework'],

    'phpOMS\tests\Math\Number\NumbersTest' => ['description' => 'General number utilities'],
    'phpOMS\tests\Math\Number\NumbersTest:testPerfect' => ['description' => 'A number can be checked to be perfect', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\NumbersTest:testSelfdescribing' => ['description' => 'A number can be checked to be self-describing', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\NumbersTest:testSquare' => ['description' => 'A number can be checked to be squared', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\NumbersTest:testZeroCounting' => ['description' => 'The amount of trailing zeros can be counted', 'type' => 'framework'],

    'phpOMS\tests\Math\Number\PrimeTest' => ['description' => 'Prime number utilities'],
    'phpOMS\tests\Math\Number\PrimeTest:testPrime' => ['description' => 'A number can be checked to be a prime number', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\PrimeTest:testSieve' => ['description' => 'A prime number can be generat3ed with the sieve of erathosthenes', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\PrimeTest:testRabin' => ['description' => 'A number can be checked to be prime with the rabin test', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\PrimeTest:testMersenne' => ['description' => 'Mersenne numbers can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Number\PrimeTest:testIsMersenne' => ['description' => 'A number can be checked to be a mersenne number', 'type' => 'framework'],

    'phpOMS\tests\Math\Topology\Metrics2DTest' => ['description' => 'Metric/distance calculations'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testManhattan' => ['description' => 'The manhattan distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testEuclidean' => ['description' => 'The euclidean distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testChebyshev' => ['description' => 'The chebyshev distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testOctile' => ['description' => 'The octile distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testMinkowski' => ['description' => 'The minkowski distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testCanberra' => ['description' => 'The canberra distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testBrayCurtis' => ['description' => 'The bray-curtis distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testAngularSeparation' => ['description' => 'The angular distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testHammingDistance' => ['description' => 'The hamming distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testUlam' => ['description' => 'The ulam distance can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testInvalidHammingDimension' => ['description' => 'Different dimension sizes for the coordinates in the hamming metric throw a InvalidDimensionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Topology\Metrics2DTest:testInvalidUlamDimension' => ['description' => 'Different dimension sizes for the coordinates in the ulam metric throw a InvalidDimensionException', 'type' => 'framework'],

    // todo: stochastics

    'phpOMS\tests\Math\Numerics\Interpolation\CubicSplineInterpolationTest' => ['description' => 'Cubic spline interpolation'],
    'phpOMS\tests\Math\Numerics\Interpolation\CubicSplineInterpolationTest:testInterpolationFirstDerivative' => ['description' => 'The spline interpolation using the first derivative is correct', 'type' => 'framework'],
    'phpOMS\tests\Math\Numerics\Interpolation\CubicSplineInterpolationTest:testInterpolationSecondDerivative' => ['description' => 'The spline interpolation using the second derivative is correct', 'type' => 'framework'],

    'phpOMS\tests\Math\Numerics\Interpolation\LagrangeInterpolationTest' => ['description' => 'Lagrange interpolation'],
    'phpOMS\tests\Math\Numerics\Interpolation\LagrangeInterpolationTest:testInterpolation' => ['description' => 'The lagrange interpolation is correct', 'type' => 'framework'],

    'phpOMS\tests\Math\Numerics\Interpolation\LinearInterpolationTest' => ['description' => 'Linear interpolation'],
    'phpOMS\tests\Math\Numerics\Interpolation\LinearInterpolationTest:testInterpolation' => ['description' => 'The linear interpolation is correct', 'type' => 'framework'],

    'phpOMS\tests\Math\Numerics\IntegrationTest' => ['description' => 'Numeric integration'],
    'phpOMS\tests\Math\Numerics\IntegrationTest:testLRect' => ['description' => 'Integration by summing up rectangle areas from the left side', 'type' => 'framework'],
    'phpOMS\tests\Math\Numerics\IntegrationTest:testRRect' => ['description' => 'Integration by summing up rectangle areas from the right side', 'type' => 'framework'],
    'phpOMS\tests\Math\Numerics\IntegrationTest:testMRect' => ['description' => 'Integration by summing up rectangle areas from the middle', 'type' => 'framework'],
    'phpOMS\tests\Math\Numerics\IntegrationTest:testTrapeze' => ['description' => 'Integration by summing up trapezoid areas', 'type' => 'framework'],
    'phpOMS\tests\Math\Numerics\IntegrationTest:testSimpson' => ['description' => 'Integration by using the simpson formula', 'type' => 'framework'],

    'phpOMS\tests\Math\Parser\EvaluatorTest' => ['description' => 'Evaluator for simple math formulas'],
    'phpOMS\tests\Math\Parser\EvaluatorTest:testBasicEvaluation' => ['description' => 'Basic formulas using +, -, *, /, () and ^ can be avluated', 'type' => 'framework'],
    'phpOMS\tests\Math\Parser\EvaluatorTest:testInvalidEvaluation' => ['description' => 'Badly formed formulas return null as result', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest' => ['description' => 'Level level regression'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest:testRegression' => ['description' => 'The regression parameters are calcualated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest:testSlope' => ['description' => 'The slope is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest:testElasticity' => ['description' => 'The elasticity is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest:testStandardErrorOfRegressionPopulation' => ['description' => 'The standard error of the population is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest:testStandardErrorOfRegressionSample' => ['description' => 'The standard error of the sample is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest:testPredictionInterval' => ['description' => 'The prediction interval is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLevelRegressionTest:testInvalidDimension' => ['description' => 'Different dimension sizes for x and y coordinates throw a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLogRegressionTest' => ['description' => 'Level log regression'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLogRegressionTest:testRegression' => ['description' => 'The regression parameters are calcualated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLogRegressionTest:testSlope' => ['description' => 'The slope is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLogRegressionTest:testElasticity' => ['description' => 'The elasticity is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LevelLogRegressionTest:testInvalidDimension' => ['description' => 'Different dimension sizes for x and y coordinates throw a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLevelRegressionTest' => ['description' => 'Log level regression'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLevelRegressionTest:testRegression' => ['description' => 'The regression parameters are calcualated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLevelRegressionTest:testSlope' => ['description' => 'The slope is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLevelRegressionTest:testElasticity' => ['description' => 'The elasticity is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLevelRegressionTest:testInvalidDimension' => ['description' => 'Different dimension sizes for x and y coordinates throw a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLogRegressionTest' => ['description' => 'Log log regression'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLogRegressionTest:testRegression' => ['description' => 'The regression parameters are calcualated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLogRegressionTest:testSlope' => ['description' => 'The slope is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLogRegressionTest:testElasticity' => ['description' => 'The elasticity is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\LogLogRegressionTest:testInvalidDimension' => ['description' => 'Different dimension sizes for x and y coordinates throw a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\Forecast\Regression\PolynomialRegressionTest' => ['description' => 'Polynomial regression'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\PolynomialRegressionTest:testRegression' => ['description' => 'The regression parameters are calcualated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\Forecast\Regression\PolynomialRegressionTest:testInvalidDimension' => ['description' => 'Different dimension sizes for x and y coordinates throw a InvalidDimensionException', 'type' => 'framework'],

    'phpOMS\tests\Math\Stochastic\NaiveBayesClassifierTest' => ['description' => 'Naive bayes classifier for numeric values and strings/attributes'],
    'phpOMS\tests\Math\Stochastic\NaiveBayesClassifierTest:testTextClassifier' => ['description' => 'The classification of strings/attributes is correct', 'type' => 'framework'],
    'phpOMS\tests\Math\Stochastic\NaiveBayesClassifierTest:testNumericClassifier' => ['description' => 'The classification of nimeric values is correct', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\AverageTest' => ['description' => 'Averages'],
    'phpOMS\tests\Math\Statistic\AverageTest:testAverage' => ['description' => 'The average change of a dataset is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testAngleMean' => ['description' => 'The average mean of angles is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testArithmeticMean' => ['description' => 'The arithmetic mean is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testWeightedAverage' => ['description' => 'The weighted average is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testGeometricMean' => ['description' => 'The geometic mean is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testHarmonicMean' => ['description' => 'The harmonic mean is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testMovingAverage' => ['description' => 'The moving average is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testInvalidWeightedAverageDimension' => ['description' => 'Different weight and dataset dimensions throw a InvalidDimensionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testInvalidArithmeticMeanZeroDevision' => ['description' => 'An empty dataset for the arithmetic mean throws a ZeroDevisionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testInvalidMovingAverageZeroDevision' => ['description' => 'An empty dataset for the moving average throws a Exception', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testInvalidHarmonicMeanZeroDevision' => ['description' => 'An empty dataset for the harmonic mean throws a ZeroDevisionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testInvalidGeometricMean' => ['description' => 'An empty dataset for the geometric mean throws a ZeroDevisionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testInvalidHarmonicMean' => ['description' => 'A dataset with a 0 element throws a ZeroDevisionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testMode' => ['description' => 'The mode is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\AverageTest:testMedian' => ['description' => 'The median is correctly calculated', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\CorrelationTest' => ['description' => 'Correlations'],
    'phpOMS\tests\Math\Statistic\CorrelationTest:testBravisPersonCorrelationCoefficient' => ['description' => 'The correlation coefficient (Bravis Person) is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\CorrelationTest:testAutocorrelationCoefficient' => ['description' => 'The autocorrelation coefficient is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\CorrelationTest:testPortmanteauTestBoxPierce' => ['description' => 'The portmanteau test (Box Pierce) is correct', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\CorrelationTest:testPortmanteauTestLjungBox' => ['description' => 'The portmanteau test (Ljung Box) is correct', 'type' => 'framework'],

    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest' => ['description' => 'Measure of dispersion'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testRange' => ['description' => 'The correlation coefficient (Bravis Person) is calculated correctly', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testStandardDeviation' => ['description' => 'The standard deviation is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testEmpiricalCovariance' => ['description' => 'The empirical covariance is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testVarianceSample' => ['description' => 'The sample variance is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testVariancePopulation' => ['description' => 'The population/empirical variance is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testDeviation' => ['description' => 'The mean deviations are correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testDeviationArray' => ['description' => 'The mean deviations for every dataset element is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testEmpiricalVariationCoefficient' => ['description' => 'The empirical variation coefficient is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testIQR' => ['description' => 'The interquartile range is correctly calculated', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testInvalidEmpiricalVariationCoefficient' => ['description' => 'The empirical varation coefficient with a mean of 0 throws a ZeroDevisionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testInvalidEmpiricalCovariance' => ['description' => 'An empty dataset in the empirical covariance throws a ZeroDevisionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testInvalidEmpiricalCovarianceDimension' => ['description' => 'Different dataset saces in the empirical covariance throw a InvalidDimensionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testInvalidSampleVariance' => ['description' => 'An empty dataset in the sample variance throws a ZeroDevisionException', 'type' => 'framework'],
    'phpOMS\tests\Math\Statistic\MeasureOfDispersionTest:testInvalidEmpiricalVariance' => ['description' => 'An empty dataset in the empirical/population variance throws a ZeroDevisionException', 'type' => 'framework'],

    'phpOMS\tests\Message\HeaderAbstractTest' => ['description' => 'Abstract header for requests/responses'],
    'phpOMS\tests\Message\HeaderAbstractTest:testStatusCodeInputOutput' => ['description' => 'The the status code can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Message\Http\HeaderTest' => ['description' => 'Header for http requests/responses'],
    'phpOMS\tests\Message\Http\HeaderTest:testDefaults' => ['description' => 'The header has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testSecurityHeader' => ['description' => 'Security policy headers get correctly identified', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testDataInputOutput' => ['description' => 'Header data can be set, checked for existence and returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testOverwrite' => ['description' => 'Header data can be forced to get overwritten', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testInvalidOverwrite' => ['description' => 'By default header data doesn\'t get overwritten', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testRemove' => ['description' => 'Header data can be removed', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testInvalidRemove' => ['description' => 'None-existing header data cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testAccountInputOutput' => ['description' => 'Account data can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testDownloadable' => ['description' => 'Data can be defined as downloadable', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testLockInputOutput' => ['description' => 'A header can be locked', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testLockInvalidSet' => ['description' => 'A locked header cannot add new data', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testLockInvalidRemove' => ['description' => 'A locked header cannot remove data', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testHeaderGeneration' => ['description' => 'The header can generate default http headers based on status codes', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\HeaderTest:testInvalidOverwriteSecurityHeader' => ['description' => 'Security header data cannot be changed once defined', 'type' => 'framework'],

    'phpOMS\tests\Message\Http\RequestTest' => ['description' => 'Request wrapper for http requests'],
    'phpOMS\tests\Message\Http\RequestTest:testDefault' => ['description' => 'The request has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testOSInputOutput' => ['description' => 'The OS can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testBrowserTypeInputOutput' => ['description' => 'The browser can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testRequestMethodInputOutput' => ['description' => 'The request method can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testRequestMethodToRouteVerb' => ['description' => 'The route verb gets correctly infered from the request method', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testConstructInputOutput' => ['description' => 'The request is correctly constracted', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testHashingInputOutput' => ['description' => 'The url hashes for the different paths get correctly generated', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testDataInputOutput' => ['description' => 'Request data can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testOverwrite' => ['description' => 'Request data can be forcefully overwritten', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testInvalidOverwrite' => ['description' => 'Request data is not overwritten by default', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testUriInputOutput' => ['description' => 'The uri can be changed and returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testDataJsonRead' => ['description' => 'Json data can be read from the request', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testEmptyDataJsonRead' => ['description' => 'None-existing json data reads return empty data', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testInvalidDataJsonRead' => ['description' => 'Invalid json data returns empty data', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testDataList' => ['description' => 'List data can be read from the request', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testEmptyDataList' => ['description' => 'None-existing list data reads return empty data', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testDataLike' => ['description' => 'Request data can be read with pattern matching', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testInvalidDataLikeMatch' => ['description' => 'In case of no pattern matches empty data is returned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testToString' => ['description' => 'A request with a path can be correctly casted to a string', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testToStringData' => ['description' => 'A request with a path and manually added data can be correctly casted to a string', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testToStringGetData' => ['description' => 'A request with a path, query parameters and manually added data can be correctly casted to a string', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testRestRequest' => ['description' => 'A rest request can be made from a request and the result can be read', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testInvalidHttpsPort' => ['description' => 'A invalid https port throws a OutOfRangeException', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RequestTest:testInvalidRouteVerb' => ['description' => 'A Invalid route verb throws a Exception', 'type' => 'framework'],

    'phpOMS\tests\Message\ResponseAbstractTest' => ['description' => 'Response wrapper for http responses'],
    'phpOMS\tests\Message\ResponseAbstractTest:testDefault' => ['description' => 'The response has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Message\ResponseAbstractTest:testJsonSerialize' => ['description' => 'The response can be json serialized', 'type' => 'framework'],
    'phpOMS\tests\Message\ResponseAbstractTest:testDataInputOutput' => ['description' => 'Data can be set and returned for the response', 'type' => 'framework'],

    'phpOMS\tests\Message\Http\ResponseTest' => ['description' => 'Response wrapper for http responses'],
    'phpOMS\tests\Message\Http\ResponseTest:testDefault' => ['description' => 'The response has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testResponseInputOutput' => ['description' => 'Response data can be set and retruned', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testRemove' => ['description' => 'Response data can be removed', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testInvalidRemove' => ['description' => 'None-existing response data cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testToArray' => ['description' => 'Response data can be turned into an array', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testJsonRender' => ['description' => 'A response with json as content-type is automatically rendered as json data', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testJsonDataDecode' => ['description' => 'Json data can be decoded from the response data', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testMinimizedRender' => ['description' => 'A html response can be forced to minimize the content by removing newlines and whitespaces', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testInvalidMinimizedRender' => ['description' => 'None-html responses cannot be forced to minimize the content by removing newlines and whitespaces', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testInvalidResponseDataToArray' => ['description' => 'Invalid response data results in an empty array', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\ResponseTest:testInvalidResponseDataRender' => ['description' => 'Invalid response data results in an empty render', 'type' => 'framework'],

    'phpOMS\tests\Message\Http\RestTest' => ['description' => 'Rest request wrapper'],
    'phpOMS\tests\Message\Http\RestTest:testRequest' => ['description' => 'A get request successfully returns the expected result', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RestTest:testPost' => ['description' => 'A post request with data successfully returns the expected result', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RestTest:testPut' => ['description' => 'A put request with data successfully returns the expected result', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RestTest:testDelete' => ['description' => 'A delete request with data successfully returns the expected result', 'type' => 'framework'],
    'phpOMS\tests\Message\Http\RestTest:testGet' => ['description' => 'A get request with data successfully returns the expected result', 'type' => 'framework'],

    'phpOMS\tests\Model\Html\HeadTest' => ['description' => 'Html head'],
    'phpOMS\tests\Model\Html\HeadTest:testDefault' => ['description' => 'The head has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testTitleInputOutput' => ['description' => 'The title can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testStyleInputOutput' => ['description' => 'The style can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testScriptInputOutput' => ['description' => 'The script can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testLanguageInputOutput' => ['description' => 'The language can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testAssetRender' => ['description' => 'The assets can be set and rendered', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testAssetLateRender' => ['description' => 'The assets can be set and rendered at the end of the document', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testAssetRenderWithAttribute' => ['description' => 'The assets can be set and rendered with attributes', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\HeadTest:testAssetLateRenderWithAttribute' => ['description' => 'The assets can be set and rendered at the end of the document with attributes', 'type' => 'framework'],

    'phpOMS\tests\Model\Html\MetaTest' => ['description' => 'Html meta data'],
    'phpOMS\tests\Model\Html\MetaTest:testDefault' => ['description' => 'The meta data has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testKeywordInputOutput' => ['description' => 'A keyword can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testAuthorInputOutput' => ['description' => 'The author can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testCharsetInputOutput' => ['description' => 'The charset can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testDescriptionInputOutput' => ['description' => 'The description can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testPropertyInputOutput' => ['description' => 'A property can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testItempropInputOutput' => ['description' => 'A itemprop can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testNameInputOutput' => ['description' => 'A name can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Model\Html\MetaTest:testRender' => ['description' => 'The meta data can be rendered', 'type' => 'framework'],

    'phpOMS\tests\Module\InfoManagerTest' => ['description' => 'Module info file manager'],
    'phpOMS\tests\Module\InfoManagerTest:testLoad' => ['description' => 'A info file can be correctly loaded', 'type' => 'framework'],
    'phpOMS\tests\Module\InfoManagerTest:testChange' => ['description' => 'A info file can be modified', 'type' => 'framework'],
    'phpOMS\tests\Module\InfoManagerTest:testInvalidPathLoad' => ['description' => 'A invalid info file path load throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\Module\InfoManagerTest:testInvalidPathUpdate' => ['description' => 'A invalid info file path update throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\Module\InfoManagerTest:testInvalidDataSet' => ['description' => 'A invalid change data throws a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\Module\ModuleManagerTest' => ['description' => 'Manager for the module system'],
    'phpOMS\tests\Module\ModuleManagerTest:testAttributes' => ['description' => 'The module manager has the expected attributes', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testUnknownModuleInit' => ['description' => 'Invalid module initializations returns a null module', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testUnknownModuleGet' => ['description' => 'Unknown modules return a null module', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testUnknwonModuleStatusChange' => ['description' => 'Unknown modules cannot get activested, deactivated', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testStatus' => ['description' => 'A module can be installed and its status can be changed', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testReInit' => ['description' => 'A module can be re-initialized', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testRequestLoad' => ['description' => 'A module is automatically loaded for its URIs', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testAllActiveModules' => ['description' => 'Active modules can be returned', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testActiveModule' => ['description' => 'Modules can be checked to be active', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testRunningModule' => ['description' => 'Modules can be checked to be running', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testAllModules' => ['description' => 'All available modules can be returned', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testInstalledModules' => ['description' => 'Installed modules can be returned', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testAdminModule' => ['description' => 'The valid module can be returned', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleManagerTest:testUninstall' => ['description' => 'A module can be uninstalled', 'type' => 'framework'],

    'phpOMS\tests\Module\ModuleAbstractTest' => ['description' => 'Abstract module'],
    'phpOMS\tests\Module\ModuleAbstractTest:testConstants' => ['description' => 'The constant values of the abstract module are overwritten by the extension', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleAbstractTest:testName' => ['description' => 'The name of the module can be returned', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleAbstractTest:testDependencies' => ['description' => 'The dependencies of the module can be returned', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleAbstractTest:testProviding' => ['description' => 'The providing of the module can be returned', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleAbstractTest:testInvalidLocalization' => ['description' => 'A invalid language or theme returns in an empty localization/language dataset', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleAbstractTest:testFillJson' => ['description' => 'The module can automatically generate a json response based on provided data for the frontend', 'type' => 'framework'],
    'phpOMS\tests\Module\ModuleAbstractTest:testFillJsonRaw' => ['description' => 'The module can automatically generate a json response based on provided data', 'type' => 'framework'],

    'phpOMS\tests\Module\PackageManagerTest' => ['description' => 'Manager for install/update packages'],
    'phpOMS\tests\Module\PackageManagerTest:testPackageValidInstall' => ['description' => 'A package can be installed', 'type' => 'framework'],
    'phpOMS\tests\Module\PackageManagerTest:testNotExtractedLoad' => ['description' => 'A package which didn\'t get extracted cannot be loaded and throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\Module\PackageManagerTest:testInvalidInstall' => ['description' => 'A invalid package cannot be installed and throws a Exception', 'type' => 'framework'],
    'phpOMS\tests\Module\PackageManagerTest:testPackageInvalidKey' => ['description' => 'A invalid package key doesn\'t validate the package', 'type' => 'framework'],
    'phpOMS\tests\Module\PackageManagerTest:testPackageInvalidContent' => ['description' => 'A invalid package content doesn\'t validate the package', 'type' => 'framework'],
    'phpOMS\tests\Module\PackageManagerTest:testCleanup' => ['description' => 'The temporarily extracted package can be cleaned up', 'type' => 'framework'],

    'phpOMS\tests\Router\WebRouterTest' => ['description' => 'Router for web requests'],
    'phpOMS\tests\Router\WebRouterTest:testDefault' => ['description' => 'The route result for an empty request is empty', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testInvalidRoutingFile' => ['description' => 'A none-existing routing file cannot be imported', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testLoadingRoutesFromFile' => ['description' => 'A existing routing file can be imported', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testRouteMatching' => ['description' => 'A matching route returns the destinations', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testRouteMissMatchingForInvalidVerbs' => ['description' => 'Invalid routing verbs don\'t match even if the route matches', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testDynamicRouteAdding' => ['description' => 'Routes can be added dynamically', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testWithCSRF' => ['description' => 'Routes which require a CSRF token can only match with a CSRF token', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testWithoutCSRF' => ['description' => 'Routes which require a CSRF token don\'t match without a CSRF token', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testWithValidPermissions' => ['description' => 'Routes only match if the permissions match', 'type' => 'framework'],
    'phpOMS\tests\Router\WebRouterTest:testWithInvalidPermissions' => ['description' => 'Routes don\'t match if the permissions don\'t match', 'type' => 'framework'],

    'phpOMS\tests\Router\SocketRouterTest' => ['description' => 'Router for socket requests'],
    'phpOMS\tests\Router\SocketRouterTest:testDefault' => ['description' => 'The route result for an empty request is empty', 'type' => 'framework'],
    'phpOMS\tests\Router\SocketRouterTest:testInvalidRoutingFile' => ['description' => 'A none-existing routing file cannot be imported', 'type' => 'framework'],
    'phpOMS\tests\Router\SocketRouterTest:testLoadingRoutesFromFile' => ['description' => 'A existing routing file can be imported', 'type' => 'framework'],
    'phpOMS\tests\Router\SocketRouterTest:testRouteMatching' => ['description' => 'A matching route returns the destinations', 'type' => 'framework'],
    'phpOMS\tests\Router\SocketRouterTest:testDynamicRouteAdding' => ['description' => 'Routes can be added dynamically', 'type' => 'framework'],
    'phpOMS\tests\Router\SocketRouterTest:testWithValidPermissions' => ['description' => 'Routes only match if the permissions match', 'type' => 'framework'],
    'phpOMS\tests\Router\SocketRouterTest:testWithInvalidPermissions' => ['description' => 'Routes don\'t match if the permissions don\'t match', 'type' => 'framework'],

    'phpOMS\tests\Security\PhpCodeTest' => ['description' => 'Basic php source code security inspection'],
    'phpOMS\tests\Security\PhpCodeTest:testHasUnicode' => ['description' => 'A file with unicode characters gets correctly identified', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testHasNoUnicode' => ['description' => 'A file with no unicode characters gets correctly identified', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testDisabledFunctions' => ['description' => 'A file with no disabled functions gets correctly identified', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testHasDeprecatedFunction' => ['description' => 'A file with deprecated functions gets correctly identified', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testHasNoDeprecatedFunction' => ['description' => 'A file with no deprecated functions gets correctly identified', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testFileIntegrity' => ['description' => 'A file hash comparison is successfull if the file generates the same hash', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testFileInvalidIntegrity' => ['description' => 'A file hash comparison is unsuccessfull if the file generates a different hash', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testStringIntegrity' => ['description' => 'Two equal strings validate as the same', 'type' => 'framework'],
    'phpOMS\tests\Security\PhpCodeTest:testStringInvalidIntegrity' => ['description' => 'Two different strings don\'t validate as the same', 'type' => 'framework'],

    // socket

    'phpOMS\tests\Stdlib\Base\AddressTest' => ['description' => 'Address type'],
    'phpOMS\tests\Stdlib\Base\AddressTest:testAttributes' => ['description' => 'The address has the expected attributes', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\AddressTest:testDefault' => ['description' => 'The address has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\AddressTest:testFAOInputOutput' => ['description' => 'The fao can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\AddressTest:testRecipientInputOutput' => ['description' => 'The recepient can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\AddressTest:testLocationInputOutput' => ['description' => 'The location can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\AddressTest:testArray' => ['description' => 'The address can be turned into array data', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\AddressTest:testJsonSerialize' => ['description' => 'The address can be json serialized', 'type' => 'framework'],

    'phpOMS\tests\Stdlib\Base\EnumArrayTest' => ['description' => 'Enum array type'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testValueOutput' => ['description' => 'A valid enum name returns the enum value', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testValidateEnumName' => ['description' => 'A valid enum name can be validated', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testInvalidEnumNameValidation' => ['description' => 'A invalid enum name doesn\'t validate', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testOutputValues' => ['description' => 'All enum name/value pairs can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testValidateEnumValue' => ['description' => 'A valid enum value can be checked for existance', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testInvalidEnumValueValidation' => ['description' => 'A invalid enum value doesn\'t validate', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testRandomValue' => ['description' => 'The amount of enum values can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testCount' => ['description' => 'A random enum value can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumArrayTest:testInvalidConstantException' => ['description' => 'A invalid enum name throws a OutOfBoundsException', 'type' => 'framework'],

    'phpOMS\tests\Stdlib\Base\EnumTest' => ['description' => 'Enum type'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testValueOutput' => ['description' => 'A valid enum name returns the enum value', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testNameOutput' => ['description' => 'A valid enum value returns the enum name', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testValidateEnumName' => ['description' => 'A valid enum name can be validated', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testInvalidEnumNameValidation' => ['description' => 'A invalid enum name doesn\'t validate', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testOutputValues' => ['description' => 'All enum name/value pairs can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testValidateEnumValue' => ['description' => 'A valid enum value can be checked for existance', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testInvalidEnumValueValidation' => ['description' => 'A invalid enum value doesn\'t validate', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testRandomValue' => ['description' => 'The amount of enum values can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testCount' => ['description' => 'A random enum value can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testFlags' => ['description' => 'Binary flags validate if they are set', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testInvalidFlags' => ['description' => 'Binary flags don\'t validate if they are not set', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\EnumTest:testInvalidConstantException' => ['description' => 'A invalid enum name throws a OutOfBoundsException', 'type' => 'framework'],

    'phpOMS\tests\Stdlib\Base\HeapTest' => ['description' => 'Heap'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testHeapify' => ['description' => 'A list of elements can be turned into a heap', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testSize' => ['description' => 'Elements get correctly pushed to the heap', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testPushAndPop' => ['description' => 'Heap elements get returned in the correct order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testPushAndPopCustomComparator' => ['description' => 'Heap elements get returned in the correct order by using a custom comparator', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testArray' => ['description' => 'The heap can be turned into an array', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testReplace' => ['description' => 'Heap elements can be replaced', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testPushPop' => ['description' => 'A heap element can be returned while adding a new one', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testContains' => ['description' => 'The heap can be checked if it contains certain elements', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testPeek' => ['description' => 'The first heap element can be returned without removing it', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testNSmallest' => ['description' => 'The n smallest elements can be returned from the heap', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testNLargest' => ['description' => 'The n largest elements can be returned from the heap', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testClear' => ['description' => 'The heap can be cleared of all elements', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\HeapTest:testEmpty' => ['description' => 'The heap can be checked if it has elements', 'type' => 'framework'],

    'phpOMS\tests\Stdlib\Base\IbanTest' => ['description' => 'Iban type'],
    'phpOMS\tests\Stdlib\Base\IbanTest:testInputOutput' => ['description' => 'A iban can be correctly parsed into its different components', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\IbanTest:testSearialization' => ['description' => 'A iban can be serialized and unserialized', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\IbanTest:testInvalidIbanCountry' => ['description' => 'A invalid iban country code throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\IbanTest:testInvalidIbanLength' => ['description' => 'A invalid iban length throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\IbanTest:testInvalidIbanChecksum' => ['description' => 'A invalid iban checksum throws a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\Stdlib\Base\LocationTest' => ['description' => 'Location type'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testAttributes' => ['description' => 'The location has the expected attributes', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testDefault' => ['description' => 'The location has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testPostalInputOutput' => ['description' => 'The postal can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testTypeInputOutput' => ['description' => 'The type can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testCityInputOutput' => ['description' => 'The city can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testCountryInputOutput' => ['description' => 'The country can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testAddressInputOutput' => ['description' => 'The address can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testStateInputOutput' => ['description' => 'The state can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testGeoInputOutput' => ['description' => 'The geo location can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testArray' => ['description' => 'The location can be turned into an array', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\LocationTest:testJsonSerialize' => ['description' => 'The location can be json serialized', 'type' => 'framework'],

    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest' => ['description' => 'DateTime type with additional functionality'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testAttributes' => ['description' => 'The smart datetime extends the datetime', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testFormat' => ['description' => 'The smart datetime can be formatted like the datetime', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testCreateModify' => ['description' => 'The smart datetime can be modified an creates a new smart datetime', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testDaysOfMonth' => ['description' => 'The days of the month can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testFirstDayOfMonth' => ['description' => 'The week day index of the first day of the month can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testCreateFromDateTime' => ['description' => 'A smart datetime can be created from a datetime', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testEndOfMonth' => ['description' => 'A smart datetime can be returned of the last day of the month', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testStartOfMonth' => ['description' => 'A smart datetime can be returned of the fist day of the month', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testEndOfWeek' => ['description' => 'A smart datetime can be returned of the fist day of the week', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testStartOfWeek' => ['description' => 'A smart datetime can be returned of the last day of the week', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testLeapYear' => ['description' => 'A date or year can be checked if it is a leap year', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testDayOfWeek' => ['description' => 'The day of the week index can be retruned from a date', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testInvalidDayOfWeek' => ['description' => 'A invalid day of the week returns a negative week index', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Base\SmartDateTimeTest:testCalendarSheet' => ['description' => 'A calendar sheet is retunred containing all days of the month and some days of the previous and next month', 'type' => 'framework'],

    // todo: graph

    'phpOMS\tests\Stdlib\Map\MultiMapTest' => ['description' => 'Map which associates multiple keys with the same value'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testDefault' => ['description' => 'The map has the expected default values and functionality after initialization', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicAddAny' => ['description' => 'Elements with multiple optional keys can be added', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicGetAny' => ['description' => 'Elements with multiple optional keys can be returned if any of the keys matches', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testOverwriteAny' => ['description' => 'Elements can be forcefully overwritten', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidOverwriteSubkeyAny' => ['description' => 'By default elements are not overwritten', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testOverwriteCreateAny' => ['description' => 'If a element with partially matching keys is already in the map it will be only added for the new key', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidOverwriteAny' => ['description' => 'If all keys exist in the map no new element will be created', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testSetByKeyAny' => ['description' => 'Values can be set/replaced by key', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidSetByKeyAny' => ['description' => 'Values cannot be set/replaced if the key doesn\'t exist', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidRemapNewAny' => ['description' => 'A key cannot be remapped to a none-existing key', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testRemapAny' => ['description' => 'A key can be remapped to the value of an existing key', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testRemapUnmapAny' => ['description' => 'If no more keys are associated with a value after a remap the value is removed from the map', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testMapKeysAny' => ['description' => 'All keys of the map can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testMapValuesAny' => ['description' => 'All values of the map can be returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testSiblingsAny' => ['description' => 'Sibling keys can be found', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidSiblingsAny' => ['description' => 'If a key doesn\'t exist or has no siblings no siblings are returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testRemoveAny' => ['description' => 'A key for a value can be removed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testRemoveLastAny' => ['description' => 'If the last key of a value is removed the value is also removed from the map', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidRemoveAny' => ['description' => 'If a key doesn\'t exist it cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicAddExact' => ['description' => 'Elements with multiple required keys can be added', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicGetExact' => ['description' => 'Elements with multiple required keys can be returned if all match', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicInvalidGetExact' => ['description' => 'Elements with multiple required keys cannot be returned if they don\'t match exactly', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicAddExactOrdered' => ['description' => 'Elements with multiple required and ordered keys can be added', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicGetExactOrdered' => ['description' => 'Elements with multiple required ordered keys can be if all match in the correct order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testBasicInvalidOrderedGetExact' => ['description' => 'Elements with multiple required keys cannot be returned if they don\'t match exactly in the correct order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testOverwriteExact' => ['description' => 'Elements with multiple required keys can be forcefully overwritten', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testOverwriteExactOrdered' => ['description' => 'Elements with multiple required ordered keys can be forcefully overwritten', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidAddDifferentOrderExact' => ['description' => 'An element cannot be added to for multiple required keys if the keys already exist in a different order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testOverwriteCreateExact' => ['description' => 'If a element with partially matching multiple keys is already in the map it will be only added for the new key', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testAddDifferentlyOrderedKeys' => ['description' => 'Adding differently ordered keys for multiple required keys will create a new entry in the map', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidOverwriteExact' => ['description' => 'If all keys for multiple required keys exist in the map no new element will be created', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidOverwriteExactOrdered' => ['description' => 'If all keys for multiple required ordered keys exist in the map no new element will be created', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testSetByKeyExact' => ['description' => 'Values can be set/replaced by multiple required keys', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidSetByKeyExact' => ['description' => 'Values cannot be set/replaced if the multiple required keys don\'t match or exist', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testSetByKeyExactOrdered' => ['description' => 'Values can be set/replaced by multiple required ordered keys if the order is correct', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidSetByKeyExactOrdered' => ['description' => 'Values cannot be set/replaced if the multiple required ordered keys don\'t match or exist in the correct order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidRemapExact' => ['description' => 'Multiple keys cannot be remapped', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testSiblingsExact' => ['description' => 'All sibling key combinations can be found for multiple required keys', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testSiblingsExactOrdered' => ['description' => 'For multiple required ordered keys don\'t exist any siblings', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testRemoveExact' => ['description' => 'A multiple required key combination for a value can be removed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidRemoveExact' => ['description' => 'If a multiple required key combination doesn\'t exist it cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testRemoveExactOrdered' => ['description' => 'A multiple required ordered key combination for a value can be removed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Map\MultiMapTest:testInvalidRemoveExactOrdered' => ['description' => 'If a multiple required ordered key combination doesn\'t exist it cannot be removed', 'type' => 'framework'],

    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest' => ['description' => 'Priority queue'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testDefault' => ['description' => 'The queue has the expected default values and functionality after initialization', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testInputOutput' => ['description' => 'Queue elements can be added with the default value of 1.0 and returned', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testAddWithPriority' => ['description' => 'Queue elements can be added with a priority', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testCount' => ['description' => 'The priority queue returns the correct amount of elements it holds', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testRemove' => ['description' => 'A queue element can be removed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testInvalidRemove' => ['description' => 'A none-existing queue element id cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testInvalidGet' => ['description' => 'A removed or none-existing queue element returns a empty data', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testPriorityIncreaseAll' => ['description' => 'The priority of all queue elements can be uniformly increased', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testPriorityChange' => ['description' => 'The priority or a queue element can be changed', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testSerialize' => ['description' => 'The queue can be serialized and unserialized', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testPop' => ['description' => 'A queue element can be popped from the que which also removes it from the queue', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testFIFO' => ['description' => 'A FIFO queue returns the elements in FIFO order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testLIFO' => ['description' => 'A LIFO queue returns the elements in LIFO order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testHighest' => ['description' => 'A highest queue returns the elements in highest priority order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testLowest' => ['description' => 'A lowest queue returns the elements in lowest priority order', 'type' => 'framework'],
    'phpOMS\tests\Stdlib\Queue\PriorityQueueTest:testInvalidPriority' => ['description' => 'A invalid priority queue type throws a InvalidEnumValue', 'type' => 'framework'],

    'phpOMS\tests\System\File\Local\DirectoryTest' => ['description' => 'Directory handler for local file system', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticCreate' => ['description' => 'A directory can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticExists' => ['description' => 'A directory can be checked for existence', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidStaticOverwrite' => ['description' => 'An existing directory cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticSubdir' => ['description' => 'A directory can be forced to be created recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidStaticSubdir' => ['description' => 'By default a directory is not created recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticName' => ['description' => 'The name of a directory is just its name without its path', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticBasename' => ['description' => 'The basename is the same as the name of the directory', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticDirname' => ['description' => 'The dirname is the same as the name of the directory', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticParent' => ['description' => 'The parent of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticDirectoryPath' => ['description' => 'The full absolute path of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticCreatedAt' => ['description' => 'The directories creation date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticChangedAt' => ['description' => 'The directories last change date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticDelete' => ['description' => 'A directory can be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidStaticDelete' => ['description' => 'A none-existing directory cannot be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticSizeRecursive' => ['description' => 'The size of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidStaticSizeRecursive' => ['description' => 'The size of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticSize' => ['description' => 'The recursive size of a directory is equals or greater than the size of the same directory none-recursive', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticPermission' => ['description' => 'The permission of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidStaticPermission' => ['description' => 'The permission of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticCopy' => ['description' => 'A directory can be copied recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticMove' => ['description' => 'A directory can be moved/renamed to a different path', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticCountRecursive' => ['description' => 'The amount of files in a directory can be returned recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticCount' => ['description' => 'The amount of files in a directory can be returned none-recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidStaticCount' => ['description' => 'The amount of files of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticListFiles' => ['description' => 'All files and sub-directories of a directory can be listed', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testStaticListFilesByExtension' => ['description' => 'All files of a directory can be listed by file extension', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidListPath' => ['description' => 'A none-existing directory returns a empty list of files and sub-directories', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidListFilesByExtension' => ['description' => 'A none-existing directory returns a empty list of files for the extension', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidCopyPath' => ['description' => 'A invalid directory cannot be copied to a new destination', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidMovePath' => ['description' => 'A invalid directory cannot be moved to a new destination', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidCreatedPath' => ['description' => 'Reading the creation date of a none-existing directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidChangedPath' => ['description' => 'Reading the last change date of a none-existing directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\DirectoryTest:testInvalidOwnerPath' => ['description' => 'Reading the owner of a none-existing directory throws a PathException', 'type' => 'framework'],

    'phpOMS\tests\System\File\Local\FileTest' => ['description' => 'File handler for local file system', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticCreate' => ['description' => 'A file without content can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticCreate' => ['description' => 'A file cannot be created if it already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticPut' => ['description' => 'A file with content can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticCreateReplace' => ['description' => 'A file cannot be replaced if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticCreateAppend' => ['description' => 'A file cannot be appended if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticCreatePrepend' => ['description' => 'A file cannot be prepended if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticExists' => ['description' => 'A file can be checked for existence', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticReplace' => ['description' => 'A file can be replaced with a new one', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticSetAlias' => ['description' => 'The set alias works like the replace flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticAppend' => ['description' => 'A file can be appended with additional content', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticAppendAlias' => ['description' => 'The append alias works like the append flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticPrepend' => ['description' => 'A file can be prepended with additional content', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticPrependAlias' => ['description' => 'The prepend alias works like the prepend flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticGet' => ['description' => 'The content of a file can be read', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticParent' => ['description' => 'The parent directory of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticExtension' => ['description' => 'The extension of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticName' => ['description' => 'The name of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticBaseName' => ['description' => 'The basename of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticDirname' => ['description' => 'The file name of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticDirectoryPath' => ['description' => 'The file path of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticCount' => ['description' => 'The count of a file is always 1', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticCreatedAt' => ['description' => 'The directories creation date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticChangedAt' => ['description' => 'The directories last change date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticDelete' => ['description' => 'A file can be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticDelete' => ['description' => 'A none-existing file cannot be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticSize' => ['description' => 'The size of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticPermission' => ['description' => 'The permission of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticPermission' => ['description' => 'The permission of a none-existing file is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticCopy' => ['description' => 'A file can be copied to a different location', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticCopy' => ['description' => 'A file cannot be copied to a different location if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticCopyOverwrite' => ['description' => 'A file can be forced to be copied to a different location even if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticMove' => ['description' => 'A file can be moved to a different location', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidStaticMove' => ['description' => 'A file cannot be moved to a different location if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testStaticMoveOverwrite' => ['description' => 'A file can be forced to be moved to a different location even if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidSizePath' => ['description' => 'The size of a none-existing file is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidCopyPath' => ['description' => 'A none-existing file cannot be copied', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidMovePath' => ['description' => 'A none-existing file cannot be moved', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidGetPath' => ['description' => 'Reading the content of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidCreatedPath' => ['description' => 'Reading the created date of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidChangedPath' => ['description' => 'Reading the last change date of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\FileTest:testInvalidOwnerPath' => ['description' => 'Reading the owner of a none-existing file throws a PathException', 'type' => 'framework'],

    'phpOMS\tests\System\File\Local\LocalStorageTest' => ['description' => 'Directory & File handler for local file system', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCreateDirectory' => ['description' => 'A directory can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticExistsDirectory' => ['description' => 'A directory can be checked for existence', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticOverwriteDirectory' => ['description' => 'An existing directory cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticSubdirDirectory' => ['description' => 'A directory can be forced to be created recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticNameDirectory' => ['description' => 'The name of a directory is just its name without its path', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticBasenameDirectory' => ['description' => 'The basename is the same as the name of the directory', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticDirnameDirectory' => ['description' => 'The dirname is the same as the name of the directory', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticParentDirectory' => ['description' => 'The parent of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticDirectoryPathDirectory' => ['description' => 'The full absolute path of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCreatedAtDirectory' => ['description' => 'The directories creation date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticChangedAtDirectory' => ['description' => 'The directories last change date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticDeleteDirectory' => ['description' => 'A directory can be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticDeleteDirectory' => ['description' => 'A none-existing directory cannot be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticSizeRecursiveDirectory' => ['description' => 'The size of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticSizeRecursiveDirectory' => ['description' => 'The size of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticSizeDirectory' => ['description' => 'The recursive size of a directory is equals or greater than the size of the same directory none-recursive', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticPermissionDirectory' => ['description' => 'The permission of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticPermissionDirectory' => ['description' => 'The permission of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCopyDirectory' => ['description' => 'A directory can be copied recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticMoveDirectory' => ['description' => 'A directory can be moved/renamed to a different path', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCountRecursiveDirectory' => ['description' => 'The amount of files in a directory can be returned recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCountDirectory' => ['description' => 'The amount of files in a directory can be returned none-recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticCountDirectory' => ['description' => 'The amount of files of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticListFilesDirectory' => ['description' => 'All files and sub-directories of a directory can be listed', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidListPathDirectory' => ['description' => 'A none-existing directory returns a empty list of files and sub-directories', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidCopyPathDirectory' => ['description' => 'A invalid directory cannot be copied to a new destination', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidMovePathDirectory' => ['description' => 'A invalid directory cannot be moved to a new destination', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidCreatedPathDirectory' => ['description' => 'Reading the creation date of a none-existing directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidChangedPathDirectory' => ['description' => 'Reading the last change date of a none-existing directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidOwnerPathDirectory' => ['description' => 'Reading the owner of a none-existing directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticCreateFile' => ['description' => 'A file cannot be created if it already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticPutFile' => ['description' => 'A file with content can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticCreateReplaceFile' => ['description' => 'A file cannot be replaced if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticCreateAppendFile' => ['description' => 'A file cannot be appended if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticCreatePrependFile' => ['description' => 'A file cannot be prepended if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticExistsFile' => ['description' => 'A file can be checked for existence', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticReplaceFile' => ['description' => 'A file can be replaced with a new one', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticSetAliasFile' => ['description' => 'The set alias works like the replace flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticAppendFile' => ['description' => 'A file can be appended with additional content', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticAppendAliasFile' => ['description' => 'The append alias works like the append flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticPrependFile' => ['description' => 'A file can be prepended with additional content', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticPrependAliasFile' => ['description' => 'The prepend alias works like the prepend flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticGetFile' => ['description' => 'The content of a file can be read', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticParentFile' => ['description' => 'The parent directory of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticExtensionFile' => ['description' => 'The extension of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticNameFile' => ['description' => 'The name of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticBaseNameFile' => ['description' => 'The basename of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticDirnameFile' => ['description' => 'The file name of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticDirectoryPathFile' => ['description' => 'The file path of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCountFile' => ['description' => 'The count of a file is always 1', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCreatedAtFile' => ['description' => 'The directories creation date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticChangedAtFile' => ['description' => 'The directories last change date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticDeleteFile' => ['description' => 'A file can be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticDeleteFile' => ['description' => 'A none-existing file cannot be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticSizeFile' => ['description' => 'The size of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticPermissionFile' => ['description' => 'The permission of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticPermissionFile' => ['description' => 'The permission of a none-existing file is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCopyFile' => ['description' => 'A file can be copied to a different location', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticCopyFile' => ['description' => 'A file cannot be copied to a different location if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticCopyOverwriteFile' => ['description' => 'A file can be forced to be copied to a different location even if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticMoveFile' => ['description' => 'A file can be moved to a different location', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidStaticMoveFile' => ['description' => 'A file cannot be moved to a different location if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testStaticMoveOverwriteFile' => ['description' => 'A file can be forced to be moved to a different location even if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidSizePathFile' => ['description' => 'The size of a none-existing file is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidCopyPathFile' => ['description' => 'A none-existing file cannot be copied', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidMovePathFile' => ['description' => 'A none-existing file cannot be moved', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidGetPathFile' => ['description' => 'Reading the content of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidCreatedPathFile' => ['description' => 'Reading the created date of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidChangedPathFile' => ['description' => 'Reading the last change date of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidOwnerPathFile' => ['description' => 'Reading the owner of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidPutPath' => ['description' => 'Writing data to a destination which looks like a directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidGetPath' => ['description' => 'Reading data from a directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidListPath' => ['description' => 'Trying to run list on a file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidSetPath' => ['description' => 'Setting data to a destination which looks like a directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidAppendPath' => ['description' => 'Appending data to a destination which looks like a directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidPrependPath' => ['description' => 'Prepending data to a destination which looks like a directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Local\LocalStorageTest:testInvalidExtensionPath' => ['description' => 'Reading the extension of a destination which looks like a directory throws a PathException', 'type' => 'framework'],

    'phpOMS\tests\System\File\Ftp\DirectoryTest' => ['description' => 'Directory handler for a ftp server', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticCreate' => ['description' => 'A directory can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticExists' => ['description' => 'A directory can be checked for existence', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidStaticOverwrite' => ['description' => 'An existing directory cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticSubdir' => ['description' => 'A directory can be forced to be created recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidStaticSubdir' => ['description' => 'By default a directory is not created recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticName' => ['description' => 'The name of a directory is just its name without its path', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticBasename' => ['description' => 'The basename is the same as the name of the directory', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticDirname' => ['description' => 'The dirname is the same as the name of the directory', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticParent' => ['description' => 'The parent of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticDirectoryPath' => ['description' => 'The full absolute path of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticCreatedAt' => ['description' => 'The directories creation date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticChangedAt' => ['description' => 'The directories last change date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticDelete' => ['description' => 'A directory can be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidStaticDelete' => ['description' => 'A none-existing directory cannot be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticSizeRecursive' => ['description' => 'The size of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidStaticSizeRecursive' => ['description' => 'The size of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticSize' => ['description' => 'The recursive size of a directory is equals or greater than the size of the same directory none-recursive', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticPermission' => ['description' => 'The permission of a directory can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidStaticPermission' => ['description' => 'The permission of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticCopy' => ['description' => 'A directory can be copied recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticMove' => ['description' => 'A directory can be moved/renamed to a different path', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticCountRecursive' => ['description' => 'The amount of files in a directory can be returned recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticCount' => ['description' => 'The amount of files in a directory can be returned none-recursively', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidStaticCount' => ['description' => 'The amount of files of a none-existing directory is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testStaticListFiles' => ['description' => 'All files and sub-directories of a directory can be listed', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidListPath' => ['description' => 'A none-existing directory returns a empty list of files and sub-directories', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidCopyPath' => ['description' => 'A invalid directory cannot be copied to a new destination', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidMovePath' => ['description' => 'A invalid directory cannot be moved to a new destination', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidCreatedPath' => ['description' => 'Reading the creation date of a none-existing directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidChangedPath' => ['description' => 'Reading the last change date of a none-existing directory throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\DirectoryTest:testInvalidOwnerPath' => ['description' => 'Reading the owner of a none-existing directory throws a PathException', 'type' => 'framework'],

    'phpOMS\tests\System\File\Ftp\FileTest' => ['description' => 'File handler for a ftp server', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticCreate' => ['description' => 'A file without content can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticCreate' => ['description' => 'A file cannot be created if it already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticPut' => ['description' => 'A file with content can be created', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticCreateReplace' => ['description' => 'A file cannot be replaced if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticCreateAppend' => ['description' => 'A file cannot be appended if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticCreatePrepend' => ['description' => 'A file cannot be prepended if it doesn\'t exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticExists' => ['description' => 'A file can be checked for existence', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticReplace' => ['description' => 'A file can be replaced with a new one', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticSetAlias' => ['description' => 'The set alias works like the replace flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticAppend' => ['description' => 'A file can be appended with additional content', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticAppendAlias' => ['description' => 'The append alias works like the append flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticPrepend' => ['description' => 'A file can be prepended with additional content', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticPrependAlias' => ['description' => 'The prepend alias works like the prepend flag', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticGet' => ['description' => 'The content of a file can be read', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticParent' => ['description' => 'The parent directory of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticExtension' => ['description' => 'The extension of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticName' => ['description' => 'The name of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticBaseName' => ['description' => 'The basename of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticDirname' => ['description' => 'The file name of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticDirectoryPath' => ['description' => 'The file path of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticCount' => ['description' => 'The count of a file is always 1', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticCreatedAt' => ['description' => 'The directories creation date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticChangedAt' => ['description' => 'The directories last change date can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticDelete' => ['description' => 'A file can be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticDelete' => ['description' => 'A none-existing file cannot be deleted', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticSize' => ['description' => 'The size of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticPermission' => ['description' => 'The permission of a file can be returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticPermission' => ['description' => 'The permission of a none-existing file is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticCopy' => ['description' => 'A file can be copied to a different location', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticCopy' => ['description' => 'A file cannot be copied to a different location if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticCopyOverwrite' => ['description' => 'A file can be forced to be copied to a different location even if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticMove' => ['description' => 'A file can be moved to a different location', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidStaticMove' => ['description' => 'A file cannot be moved to a different location if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testStaticMoveOverwrite' => ['description' => 'A file can be forced to be moved to a different location even if the destination already exists', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidSizePath' => ['description' => 'The size of a none-existing file is negative', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidCopyPath' => ['description' => 'A none-existing file cannot be copied', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidMovePath' => ['description' => 'A none-existing file cannot be moved', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidGetPath' => ['description' => 'Reading the content of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidCreatedPath' => ['description' => 'Reading the created date of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidChangedPath' => ['description' => 'Reading the last change date of a none-existing file throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\System\File\Ftp\FileTest:testInvalidOwnerPath' => ['description' => 'Reading the owner of a none-existing file throws a PathException', 'type' => 'framework'],

    'phpOMS\tests\System\File\StorageTest' => ['description' => 'Storage handler for the different storage handler types', 'type' => 'framework'],
    'phpOMS\tests\System\File\StorageTest:testStorageDefault' => ['description' => 'By default the local storage handler is returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\StorageTest:testStoragePreDefined' => ['description' => 'The pre-defined storage handlers can be returned by their name', 'type' => 'framework'],
    'phpOMS\tests\System\File\StorageTest:testInputOutput' => ['description' => 'Storages can be registered and returned', 'type' => 'framework'],
    'phpOMS\tests\System\File\StorageTest:testInvalidRegister' => ['description' => 'Registered storage handlers cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\System\File\StorageTest:testInvalidStorage' => ['description' => 'A invalid or none-existing storage throws a Exception', 'type' => 'framework'],

    'phpOMS\tests\System\File\FileUtilsTest' => ['description' => 'Storage handler for the different storage handler types', 'type' => 'framework'],
    'phpOMS\tests\System\File\FileUtilsTest:testExtension' => ['description' => 'File extensions can be categorized', 'type' => 'framework'],
    'phpOMS\tests\System\File\FileUtilsTest:testAbsolute' => ['description' => 'A relative path can be turned into an absolute path', 'type' => 'framework'],
    'phpOMS\tests\System\File\FileUtilsTest:testPermissionToOctal' => ['description' => 'Permissions can be turned into ocal values', 'type' => 'framework'],

    'phpOMS\tests\System\SystemUtilsTest' => ['description' => 'System information', 'type' => 'framework'],
    'phpOMS\tests\System\SystemUtilsTest:testRAM' => ['description' => 'Test if it is possible to get information about the available RAM and usage', 'type' => 'framework'],
    'phpOMS\tests\System\SystemUtilsTest:testCPUUsage' => ['description' => 'Test if it is possible to get information about the CPU usage', 'type' => 'framework'],

    'phpOMS\tests\Uri\HttpTest' => ['description' => 'Http uri / url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testDefault' => ['description' => 'The http url has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testValidator' => ['description' => 'A url can be validated', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testSchemaInputOutput' => ['description' => 'The url schema can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testHostInputOutput' => ['description' => 'The host can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testUsernameInputOutput' => ['description' => 'The username can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testPasswordInputOutput' => ['description' => 'The password can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testBaseInputOutput' => ['description' => 'The base can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testStringify' => ['description' => 'The url can be turned into a string', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testAuthorityInputOutput' => ['description' => 'The authority can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testUserinfoInputOutput' => ['description' => 'The user info can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testRootPathInputOutput' => ['description' => 'The root path can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testPathOffsetInputOutput' => ['description' => 'The path offset can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testSubdmonain' => ['description' => 'The subdomain can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testQueryData' => ['description' => 'The query data can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testFragment' => ['description' => 'The fragment data can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testPathData' => ['description' => 'The path data can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testRouteInputOutput' => ['description' => 'The route can be parsed correctly from a url', 'type' => 'framework'],
    'phpOMS\tests\Uri\HttpTest:testInvalidUri' => ['description' => 'A invalid uri cannot get parsed', 'type' => 'framework'],

    'phpOMS\tests\Uri\ArgumentTest' => ['description' => 'Argument uri / uri', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testDefault' => ['description' => 'The argument uri has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testValidator' => ['description' => 'A uri can be validated', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testPathInputOutput' => ['description' => 'The path can be parsed correctly from a uri', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testRouteInputOutput' => ['description' => 'The route can be parsed correctly from a uri', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testQueryInputOutput' => ['description' => 'The query data can be parsed correctly from a uri', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testFragmentInputOutput' => ['description' => 'The fragment can be parsed correctly from a uri', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testStringify' => ['description' => 'The uri can be turned into a string', 'type' => 'framework'],
    'phpOMS\tests\Uri\ArgumentTest:testRootPathInputOutput' => ['description' => 'The root path can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Uri\UriFactoryTest' => ['description' => 'Http uri / url factory', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testDefault' => ['description' => 'The http url factory has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testQueryInputOutput' => ['description' => 'Data can be set to the factory and returned', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testOverwrite' => ['description' => 'Data can be forcefully overwritten', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testInvalidOverwrite' => ['description' => 'By default data is not overwritten in the factory', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testClearing' => ['description' => 'Data can be removed/cleared from the factory', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testInvalidClearing' => ['description' => 'None-existing data cannot be cleared from the factory', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testClean' => ['description' => 'Data can be removed from the factory by category', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testCleanWildcard' => ['description' => 'All data can be removed from the factory with a wildcard', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testClearingLike' => ['description' => 'Data can be removed from the factory with regular expression matches', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testInvalidClearingLike' => ['description' => 'Data whitch doesn\'t match the regular expression is not removed', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testBuilder' => ['description' => 'A url can be build with the defined factory data and/or build specific data', 'type' => 'framework'],
    'phpOMS\tests\Uri\UriFactoryTest:testSetupBuild' => ['description' => 'The uri factory can be set up with default values from a url and build with these default values', 'type' => 'framework'],

    // barcode

    'phpOMS\tests\Utils\Compression\LZWTest' => ['description' => 'LZW compression', 'type' => 'framework'],
    'phpOMS\tests\Utils\Compression\LZWTest:testLZW' => ['description' => 'A string can be LZW compressed and uncompressed', 'type' => 'framework'],

    'phpOMS\tests\Utils\Converter\CurrencyTest' => ['description' => 'Currency converter', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\CurrencyTest:testCurrencyFromEur' => ['description' => 'A currency can be converted from euro to another currency', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\CurrencyTest:testCurrencyToEur' => ['description' => 'A currency can be converted to euro from another currency', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\CurrencyTest:testCurrency' => ['description' => 'A currency can be converted from one currency to another currency', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\CurrencyTest:testInvalidFromEur' => ['description' => 'A currency conversion from eur to a invalid currency throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\CurrencyTest:testInvalidToEur' => ['description' => 'A currency conversion from a invalid currency to eur throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\CurrencyTest:testInvalidConvert' => ['description' => 'A currency conversion from a invalid currency to a invalid currency throws a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\Utils\Converter\FileTest' => ['description' => 'File size converter', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\FileTest:testByteSizeToString' => ['description' => 'A byte number can be converted to a string representation', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\FileTest:testKilobyteSizeToString' => ['description' => 'A kilobyte number can be converted to a string representation', 'type' => 'framework'],

    'phpOMS\tests\Utils\Converter\IpTest' => ['description' => 'IP converter', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\IpTest:testIp' => ['description' => 'An ip can be converted to a float', 'type' => 'framework'],

    'phpOMS\tests\Utils\Converter\MeasurementTest' => ['description' => 'Measurement converter', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testTemperature' => ['description' => 'Temperatures can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testWeight' => ['description' => 'Weights can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testLength' => ['description' => 'Lengths can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testArea' => ['description' => 'Areas can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testVolume' => ['description' => 'Volumes can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testSpeed' => ['description' => 'Speeds can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testTime' => ['description' => 'Times can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testAngle' => ['description' => 'Angles can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testPressure' => ['description' => 'Pressures can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testEnergy' => ['description' => 'Energies can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testFileSize' => ['description' => 'Filesizes can be converted', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidTemperatureFrom' => ['description' => 'Invalid convertion from unknown temperature throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidTemperatureTo' => ['description' => 'Invalid convertion to unknown temperature throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidWeightFrom' => ['description' => 'Invalid convertion from unknown weight throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidWeightTo' => ['description' => 'Invalid convertion to unknown weight throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidLengthFrom' => ['description' => 'Invalid convertion from unknown length throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidLengthTo' => ['description' => 'Invalid convertion to unknown length throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidAreaFrom' => ['description' => 'Invalid convertion from unknown area throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidAreaTo' => ['description' => 'Invalid convertion to unknown area throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidVolumeFrom' => ['description' => 'Invalid convertion from unknown volume throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidVolumeTo' => ['description' => 'Invalid convertion to unknown volume throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidSpeedFrom' => ['description' => 'Invalid convertion from unknown speed throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidSpeedTo' => ['description' => 'Invalid convertion to unknown speed throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidTimeFrom' => ['description' => 'Invalid convertion from unknown time throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidTimeTo' => ['description' => 'Invalid convertion to unknown time throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidAngleFrom' => ['description' => 'Invalid convertion from unknown angle throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidAngleTo' => ['description' => 'Invalid convertion to unknown angle throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidPressureFrom' => ['description' => 'Invalid convertion from unknown pressure throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidPressureTo' => ['description' => 'Invalid convertion to unknown pressure throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidEnergyPowerFrom' => ['description' => 'Invalid convertion from unknown energy throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidEnergyPowerTo' => ['description' => 'Invalid convertion to unknown energy throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidFileSizeFrom' => ['description' => 'Invalid convertion from unknown filesize throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\MeasurementTest:testInvalidFileSizeTo' => ['description' => 'Invalid convertion to unknown filesize throws a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\Utils\Converter\NumericTest' => ['description' => 'Numeric converter', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\NumericTest:testArabicToRoman' => ['description' => 'Arabic numbers can be converted to roman numbers', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\NumericTest:testRomanToArabic' => ['description' => 'Roman numbers can be converted to arabic numbers', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\NumericTest:testAlphaToNumeric' => ['description' => 'Letters can be converted to numbers', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\NumericTest:testNumericToAlpha' => ['description' => 'Numbers can be converted to letters', 'type' => 'framework'],
    'phpOMS\tests\Utils\Converter\NumericTest:testBase' => ['description' => 'Numbers can be converted between bases', 'type' => 'framework'],

    'phpOMS\tests\Utils\Encoding\Huffman\HuffmanTest' => ['description' => 'Data can be ecoded with huffman', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\Huffman\HuffmanTest:testEmpty' => ['description' => 'Encoding and decoding empty data results in an empty output', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\Huffman\HuffmanTest:testHuffman' => ['description' => 'Data can be huffman encoded and decoded', 'type' => 'framework'],

    'phpOMS\tests\Utils\Encoding\Huffman\DictionaryTest' => ['description' => 'Dictionary for the huffman encoding', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\Huffman\DictionaryTest:testInvalidGetCharacter' => ['description' => 'Only single characters can be returned from the dictionary. Multiple characters throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\Huffman\DictionaryTest:testNotExistingGetCharacter' => ['description' => 'A none-existing character throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\Huffman\DictionaryTest:testInvalidSetCharacter' => ['description' => 'Only single chracters can be set in the dictionary. Multiple characters throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\Huffman\DictionaryTest:testInvalidSetDuplicateCharacter' => ['description' => 'Dictionary elements cannot be overwritten and throw a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\Huffman\DictionaryTest:testInvalidFormattedValue' => ['description' => 'Invalid dictionary values throw a InvalidArgumentException', 'type' => 'framework'],

    'phpOMS\tests\Utils\Encoding\CaesarTest' => ['description' => 'Caesar text encoding/decoding', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\CaesarTest:testEncoding' => ['description' => 'Text can be encoded and decoded with the ceasar encoding', 'type' => 'framework'],

    'phpOMS\tests\Utils\Encoding\GrayTest' => ['description' => 'Gray text encoding/decoding', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\GrayTest:testEncoding' => ['description' => 'Text can be encoded and decoded with the gray encoding', 'type' => 'framework'],

    'phpOMS\tests\Utils\Encoding\XorEncodingTest' => ['description' => 'XOR text encoding/decoding', 'type' => 'framework'],
    'phpOMS\tests\Utils\Encoding\XorEncodingTest:testEncoding' => ['description' => 'Text can be encoded and decoded with the xor encoding', 'type' => 'framework'],

    'phpOMS\tests\Utils\Git\GitTest' => ['description' => ' Git utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\GitTest:testBinary' => ['description' => 'The git path can be returned', 'type' => 'framework'],

    'phpOMS\tests\Utils\Git\AuthorTest' => ['description' => 'Git author', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\AuthorTest:testDefault' => ['description' => 'The author has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\AuthorTest:testConstructInputOutput' => ['description' => 'The author name and email can be set during initialization and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\AuthorTest:testCommitCountInputOutput' => ['description' => 'The commit count can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\AuthorTest:testAdditionCountInputOutput' => ['description' => 'The addition count can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\AuthorTest:testRemovalCountInputOutput' => ['description' => 'The removal count can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Utils\Git\BranchTest' => ['description' => 'Git branch', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\BranchTest:testDefault' => ['description' => 'The branch has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\BranchTest:testConstructInputOutput' => ['description' => 'The branch name can be set during initialization and returned', 'type' => 'framework'],

    'phpOMS\tests\Utils\Git\CommitTest' => ['description' => 'Git commit', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testDefault' => ['description' => 'The commit has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testFileInputOutput' => ['description' => 'A file can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testInvalidOverwrite' => ['description' => 'A file can only be added one time', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testRemoveFile' => ['description' => 'A file can be removed', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testInvalidRemoveFile' => ['description' => 'A none-existing file cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testChangeInputOutput' => ['description' => 'A change can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testDuplicateLineChange' => ['description' => 'Adding the same change throws a Exception', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testMessageInputOutput' => ['description' => 'A commit message can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testAuthorInputOutput' => ['description' => 'The author can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testBranchInputOutput' => ['description' => 'The branch can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testTagInputOutput' => ['description' => 'The tag can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testDateInputOutput' => ['description' => 'The date can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\CommitTest:testRepositoryInputOutput' => ['description' => 'The repository can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Utils\Git\RepositoryTest' => ['description' => 'Git repository', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\RepositoryTest:testDefault' => ['description' => 'The repository has the expected default values after initialization', 'type' => 'framework'],

    'phpOMS\tests\Utils\Git\TagTest' => ['description' => 'Git repository', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\TagTest:testDefault' => ['description' => 'The tag has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\TagTest:testConstructorInputOutput' => ['description' => 'The tag name can be set during initialization and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\Git\TagTest:testMessageInputOutput' => ['description' => 'The message can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Utils\IO\Csv\CsvSettingsTest' => ['description' => 'Csv file settings', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Csv\CsvSettingsTest:testDelimiter' => ['description' => 'The delimitar in a csv file can be guessed', 'type' => 'framework'],

    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest' => ['description' => 'Spreadsheet database mapper', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testInsertOds' => ['description' => 'Data can be inserted into a database from an ods files', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testInsertXls' => ['description' => 'Data can be inserted into a database from a xls files', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testInsertXlsx' => ['description' => 'Data can be inserted into a database from a xlsx files', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testUpdateOds' => ['description' => 'Data can be updated in a database from an ods files', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testUpdateXls' => ['description' => 'Data can be updated in a database from a xls files', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testUpdateXlsx' => ['description' => 'Data can be updated in a database from a xlsx files', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testSelectOds' => ['description' => 'Data can be inserted into an ods files from a database', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testSelectXls' => ['description' => 'Data can be inserted into a xls files from a database', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Spreadsheet\SpreadsheetDatabaseMapperTest:testSelectXlsx' => ['description' => 'Data can be inserted into a xlsx files from a database', 'type' => 'framework'],

    'phpOMS\tests\Utils\IO\Zip\GzTest' => ['description' => 'Gz archive', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\GzTest:testGz' => ['description' => 'Data can be gz packed and unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\GzTest:testInvalidGz' => ['description' => 'A gz archive cannot be overwritten', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\GzTest:testInvalidUnpackSource' => ['description' => 'A none-existing source cannot be unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\GzTest:testInvalidUnpackDestination' => ['description' => 'A destination cannot be overwritten', 'type' => 'framework'],

    'phpOMS\tests\Utils\IO\Zip\TarGzTest' => ['description' => 'TarGz archive', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarGzTest:testTarGz' => ['description' => 'Data can be tar gz packed and unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarGzTest:testInvalidTarGz' => ['description' => 'A tar gz archive cannot be overwritten by default', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarGzTest:testInvalidUnpackSource' => ['description' => 'A none-existing source cannot be unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarGzTest:testInvalidUnpackDestination' => ['description' => 'A destination cannot be overwritten', 'type' => 'framework'],

    'phpOMS\tests\Utils\IO\Zip\TarTest' => ['description' => 'Tar archive', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarTest:testTar' => ['description' => 'Data can be tar packed and unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarTest:testInvalidTar' => ['description' => 'A tar archive cannot be overwritten by default', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarTest:testInvalidUnpackSource' => ['description' => 'A none-existing source cannot be unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\TarTest:testInvalidUnpackDestination' => ['description' => 'A destination cannot be overwritten', 'type' => 'framework'],

    'phpOMS\tests\Utils\IO\Zip\ZipTest' => ['description' => 'Zip archive', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\ZipTest:testZip' => ['description' => 'Data can be zip packed and unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\ZipTest:testInvalidZip' => ['description' => 'A zip archive cannot be overwritten by default', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\ZipTest:testInvalidUnpackSource' => ['description' => 'A none-existing source cannot be unpacked', 'type' => 'framework'],
    'phpOMS\tests\Utils\IO\Zip\ZipTest:testInvalidUnpackDestination' => ['description' => 'A destination cannot be overwritten', 'type' => 'framework'],

    'phpOMS\tests\Utils\Parser\Php\ArrayParserTest' => ['description' => 'Array data serializer as code', 'type' => 'framework'],
    'phpOMS\tests\Utils\Parser\Php\ArrayParserTest:testParser' => ['description' => 'An array can be encoded and decoded as php code', 'type' => 'framework'],
    'phpOMS\tests\Utils\Parser\Php\ArrayParserTest:testInvalidValueType' => ['description' => 'A value can be encoded and decoded into php code', 'type' => 'framework'],

    // markdown

    'phpOMS\tests\Utils\RnG\ArrayRandomizeTest' => ['description' => 'Array randomizer', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\ArrayRandomizeTest:testYates' => ['description' => 'An array can be randomized using the yates algorithm', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\ArrayRandomizeTest:testKnuth' => ['description' => 'An array can be randomized using the knuth algorithm', 'type' => 'framework'],

    'phpOMS\tests\Utils\RnG\DateTimeTest' => ['description' => 'Date time randomizer', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\DateTimeTest:testRnG' => ['description' => 'A random date time can be generated', 'type' => 'framework'],

    'phpOMS\tests\Utils\RnG\FileTest' => ['description' => 'File extension randomizer', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\FileTest:testRnGExtension' => ['description' => 'A random file extension can be generated', 'type' => 'framework'],

    'phpOMS\tests\Utils\RnG\LinearCongruentialGeneratorTest' => ['description' => 'Random number generator', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\LinearCongruentialGeneratorTest:testBsdRng' => ['description' => 'The bsd random number generator starts with the correct sequence', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\LinearCongruentialGeneratorTest:testBsdRngEqual' => ['description' => 'The same bsd seed generates the same random number', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\LinearCongruentialGeneratorTest:testBsdRngNotEqual' => ['description' => 'Different bsd seeds generate different random numbers', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\LinearCongruentialGeneratorTest:testMsRng' => ['description' => 'The msvcrt random number generator starts with the correct sequence', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\LinearCongruentialGeneratorTest:testMsRngEqual' => ['description' => 'The same msvcrt seed generates the same random number', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\LinearCongruentialGeneratorTest:testMsRngNotEqual' => ['description' => 'Different msvcrt seeds generate different random numbers', 'type' => 'framework'],

    'phpOMS\tests\Utils\RnG\NameTest' => ['description' => 'Random name generator', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\NameTest:testRandom' => ['description' => 'Random female and male names can be generated', 'type' => 'framework'],

    'phpOMS\tests\Utils\RnG\PhoneTest' => ['description' => 'Random phone number generator', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\PhoneTest:testRnG' => ['description' => 'Random phone numbers can be generated', 'type' => 'framework'],

    'phpOMS\tests\Utils\RnG\StringUtilsTest' => ['description' => 'Random string generator', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\StringUtilsTest:testStrings' => ['description' => 'Random strings can be generated', 'type' => 'framework'],

    'phpOMS\tests\Utils\RnG\TextTest' => ['description' => 'Random text generator', 'type' => 'framework'],
    'phpOMS\tests\Utils\RnG\TextTest:testRnG' => ['description' => 'Random text can be generated', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\CronJobTest' => ['description' => 'Cron job', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronJobTest:testDefault' => ['description' => 'The cron job has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronJobTest:testCreateJobWithData' => ['description' => 'A cron job can be created from an array and rendered', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\CronTest' => ['description' => 'Cron handler', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronTest:testDefault' => ['description' => 'The cron handler has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronTest:testGuessBinary' => ['description' => 'The cron brinary location path can be guessed', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronTest:testCronJobInputOutput' => ['description' => 'A cron job can be created and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronTest:testInvalidCronJobName' => ['description' => 'A none-existing cron name cannot be returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronTest:testCronJobUpdate' => ['description' => 'A cron job can be updated', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\CronTest:testDelete' => ['description' => 'A cron job can be deleted', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\IntervalTest' => ['description' => 'Cron handler', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testDefault' => ['description' => 'The interval has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testConstructorInputOutput' => ['description' => 'The start date can be set during initialization and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testStartInputOutput' => ['description' => 'The start date can set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testEndInputOutput' => ['description' => 'The end date can set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testMaxExecutionInputOutput' => ['description' => 'The maximum execution duration can set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testMinuteInputOutput' => ['description' => 'An execution minute can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testMinuteOverwriteInputOutput' => ['description' => 'An execution minute can be overwritten', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testHourInputOutput' => ['description' => 'An execution hour can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testHourOverwriteInputOutput' => ['description' => 'An execution hour can be overwritten', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testYearInputOutput' => ['description' => 'An execution year can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testYearOverwriteInputOutput' => ['description' => 'An execution year can be overwritten', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testDayOfMonthInputOutput' => ['description' => 'An execution day of month can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testDayOfMonthOverwriteInputOutput' => ['description' => 'An execution day of month can be overwritten', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testDayOfWeekInputOutput' => ['description' => 'An execution day of week can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testDayOfWeekOverwriteInputOutput' => ['description' => 'An execution day of week can be overwritten', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testSerialize' => ['description' => 'A interval can be serialized', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\IntervalTest:testUnserialize' => ['description' => 'A serialized interval can be unserialized', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\SchedulerAbstractTest' => ['description' => 'Scheduler abstraction', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\SchedulerAbstractTest:testDefault' => ['description' => 'The scheduler has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\SchedulerAbstractTest:testGuessBinary' => ['description' => 'The scheduler brinary location path can be guessed', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\SchedulerFactoryTest' => ['description' => 'Scheduler factory for creating cron/task handlers', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\SchedulerFactoryTest:testCreate' => ['description' => 'The correct schudeler is crated depending on the operating system', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\TaskAbstractTest' => ['description' => 'Job/task abstraction', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskAbstractTest:testDefault' => ['description' => 'The task abstraction has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskAbstractTest:testCommandInputOutput' => ['description' => 'The command can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskAbstractTest:testStatusInputOutput' => ['description' => 'The status can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskAbstractTest:testCommentInputOutput' => ['description' => 'The comment can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskAbstractTest:testLastRuntimeInputOutput' => ['description' => 'The last runtime can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskAbstractTest:testNextRuntimeInputOutput' => ['description' => 'The next runtime can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\TaskFactoryTest' => ['description' => 'Task factory for creating cron jobs/tasks', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskFactoryTest:testFactory' => ['description' => 'The correct task is crated depending on the operating system', 'type' => 'framework'],

    'phpOMS\tests\Utils\TaskSchedule\TaskSchedulerTest' => ['description' => 'Task schedule handler', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskSchedulerTest:testDefault' => ['description' => 'The task handler has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskSchedulerTest:testGuessBinary' => ['description' => 'The task brinary location path can be guessed', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskSchedulerTest:testTaskScheduleInputOutput' => ['description' => 'A task can be created and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskSchedulerTest:testInvalidTaskScheduleName' => ['description' => 'A none-existing task name cannot be returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskSchedulerTest:testTaskScheduleUpdate' => ['description' => 'A task can be updated', 'type' => 'framework'],
    'phpOMS\tests\Utils\TaskSchedule\TaskSchedulerTest:testDelete' => ['description' => 'A task can be deleted', 'type' => 'framework'],

    'phpOMS\tests\Utils\ArrayUtilsTest' => ['description' => 'Array utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArrayInputOutput' => ['description' => 'Array values can be set and returned with a path', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArrayInRecursive' => ['description' => 'Test recursively if a value is in an array', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArrayDelete' => ['description' => 'An array element can be removed by its path', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArrayRecursiveSum' => ['description' => 'The recursive sum of all values in an array can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArrayFlatten' => ['description' => 'A multi-dimensional array can be flatten to a one-dimensional array', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArraySum' => ['description' => 'The sum of an array can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArrayAllIn' => ['description' => 'An array can be checked if it contains multiple defined elements', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArrayAnyIn' => ['description' => 'An array can be checked if it contains any of the defined elements', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArgHas' => ['description' => 'An array can be checked if it has an element and returns its index', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testInvalidArgHas' => ['description' => 'A none-existing argument in an array returns a negative value', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testArgGet' => ['description' => 'The argument value in an array can be returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testInvalidArgGet' => ['description' => 'A none-existing argument in an array returns null', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testPowerInt' => ['description' => 'All array values in an array can be exponentiated by an integer', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testPowerFloat' => ['description' => 'All array values in an array can be exponentiated by a float', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testSqrt' => ['description' => 'All array values in an array can be square rooted', 'type' => 'framework'],
    'phpOMS\tests\Utils\ArrayUtilsTest:testAbs' => ['description' => 'All array values in an array can be turned into their absolute value', 'type' => 'framework'],

    'phpOMS\tests\Utils\ColorUtilsTest' => ['description' => 'Color utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\ColorUtilsTest:testIntToRgb' => ['description' => 'A integer can be converted to rgb', 'type' => 'framework'],
    'phpOMS\tests\Utils\ColorUtilsTest:testRgbToInt' => ['description' => 'Rgb can be converted to a integer', 'type' => 'framework'],

    'phpOMS\tests\Utils\ImageUtilsTest' => ['description' => 'Image utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\ImageUtilsTest:testImage' => ['description' => 'Base64 image data can be decoded to an image', 'type' => 'framework'],

    'phpOMS\tests\Utils\NumericUtilsTest' => ['description' => 'Numeric utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\NumericUtilsTest:testShift' => ['description' => 'Integers can be unsigned right shifted', 'type' => 'framework'],

    'phpOMS\tests\Utils\PermutationTest' => ['description' => 'Permutation utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\PermutationTest:testPermute' => ['description' => 'An array can be permuted', 'type' => 'framework'],
    'phpOMS\tests\Utils\PermutationTest:testIsPermutation' => ['description' => 'Two string can be checked if they are a permutation of each other', 'type' => 'framework'],
    'phpOMS\tests\Utils\PermutationTest:testIsPalindrome' => ['description' => 'A string can be checked if it is a palindrome', 'type' => 'framework'],
    'phpOMS\tests\Utils\PermutationTest:testPermutate' => ['description' => 'An array can be permutated with a permutation key', 'type' => 'framework'],
    'phpOMS\tests\Utils\PermutationTest:testWrongPermuteParameterType' => ['description' => 'A invalid permutation type throws a InvalidArgumentException', 'type' => 'framework'],
    'phpOMS\tests\Utils\PermutationTest:testWrongPermuteKeyLength' => ['description' => 'A none-existing permutation keye throws a OutOfBoundsException', 'type' => 'framework'],

    'phpOMS\tests\Utils\StringCompareTest' => ['description' => 'String comparison / dictionary', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringCompareTest:testDictionaryMatch' => ['description' => 'A string can be matched with a dictionary entry', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringCompareTest:testInvalidDictionary' => ['description' => 'A string doesn\'t match a dictionary entry if it is very different', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringCompareTest:testDictionaryAdd' => ['description' => 'A new dictionary entry can be created and returned', 'type' => 'framework'],

    'phpOMS\tests\Utils\StringUtilsTest' => ['description' => 'String utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testEntropy' => ['description' => 'The entropy of a string can be calculated', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testStarts' => ['description' => 'A string can be checked if it starts with a defined string', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testEnds' => ['description' => 'A string can be checked if it ends with a defined string', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testStartsMb' => ['description' => 'A multi-byte string can be checked if it starts with a defined string', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testEndsMb' => ['description' => 'A multi-byte string can be checked if it ends with a defined string', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testTransformUpperCase' => ['description' => 'The first character of a multi-byte string can be turned into upper case', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testTransformLowerCase' => ['description' => 'The first character of a multi-byte string can be turned into lower case', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testTrim' => ['description' => 'A multi-byte string can be trimmed', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testRTrim' => ['description' => 'A multi-byte string can be right-trimmed', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testLTrim' => ['description' => 'A multi-byte string can be left-trimmed', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testContains' => ['description' => 'A string can be checked if it contains at least one defined string element', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testContainsMb' => ['description' => 'A multi-byte string can be checked if it contains at least one defined string element', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testCountMb' => ['description' => 'The characters of a multi-byte string can be counted', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testCountBeginning' => ['description' => 'The amount of a defined characters in the beginning of a string can be counted', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testStringify' => ['description' => 'Various data types can be stringified', 'type' => 'framework'],
    'phpOMS\tests\Utils\StringUtilsTest:testStringDiffHtml' => ['description' => 'The difference between two strings can be evaluated', 'type' => 'framework'],

    'phpOMS\tests\Utils\TestUtilsTest' => ['description' => 'Test utilities', 'type' => 'framework'],
    'phpOMS\tests\Utils\TestUtilsTest:testGet' => ['description' => 'A member value can be returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TestUtilsTest:testInvalidGet' => ['description' => 'Invalid member variable returns null', 'type' => 'framework'],
    'phpOMS\tests\Utils\TestUtilsTest:testInputOutput' => ['description' => 'A member value can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Utils\TestUtilsTest:testInputInputOutput' => ['description' => 'A none-existing member variable cannot be set', 'type' => 'framework'],

    'phpOMS\tests\Validation\Base\DateTimeTest' => ['description' => 'Datetime validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Base\DateTimeTest:testDateTime' => ['description' => 'A date time string can be validated', 'type' => 'framework'],

    'phpOMS\tests\Validation\Base\JsonTest' => ['description' => 'Json validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Base\JsonTest:testJson' => ['description' => 'A json string can be validated', 'type' => 'framework'],
    'phpOMS\tests\Validation\Base\JsonTest:testJsonTemplate' => ['description' => 'A json string can be validated against a template definition', 'type' => 'framework'],
    'phpOMS\tests\Validation\Base\JsonTest:testJsonTemplateAdditional' => ['description' => 'A json string can be validated against a template definition with additional data', 'type' => 'framework'],
    'phpOMS\tests\Validation\Base\JsonTest:testJsonTemplateInvalidAdditional' => ['description' => 'A json string cannot be validated against a template definition with additional data if an exact match is enforced', 'type' => 'framework'],
    'phpOMS\tests\Validation\Base\JsonTest:testJsonTemplateInvalidMissing' => ['description' => 'A json string cannot be validated against a template definition with missing data if an exact match is enforced', 'type' => 'framework'],
    'phpOMS\tests\Validation\Base\JsonTest:testInvalidJsonTemplate' => ['description' => 'A json string cannot be validated against a template definition if it doesn\'t match the template', 'type' => 'framework'],

    'phpOMS\tests\Validation\Finance\BICTest' => ['description' => 'BIC validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Finance\BICTest:testBic' => ['description' => 'A BIC can be validated', 'type' => 'framework'],

    'phpOMS\tests\Validation\Finance\CreditCardTest' => ['description' => 'Credit card validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Finance\CreditCardTest:testCreditCard' => ['description' => 'A credit card can be validated', 'type' => 'framework'],
    'phpOMS\tests\Validation\Finance\CreditCardTest:testInvalidCreditCardType' => ['description' => 'A invalid type cannot be validated', 'type' => 'framework'],

    'phpOMS\tests\Validation\Finance\IbanTest' => ['description' => 'Iban validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Finance\IbanTest:testValid' => ['description' => 'A iban can be validated', 'type' => 'framework'],

    'phpOMS\tests\Validation\Network\EmailTest' => ['description' => 'Email validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Network\EmailTest:testValidation' => ['description' => 'A email can be validated', 'type' => 'framework'],

    'phpOMS\tests\Validation\Network\HostnameTest' => ['description' => 'Hostname validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Network\HostnameTest:testHostname' => ['description' => 'A hostname can be validated', 'type' => 'framework'],

    'phpOMS\tests\Validation\Network\IpTest' => ['description' => 'IP validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\Network\IpTest:testValid' => ['description' => 'A ip can be validated', 'type' => 'framework'],
    'phpOMS\tests\Validation\Network\IpTest:testValidIp4' => ['description' => 'A ip4 can be validated', 'type' => 'framework'],
    'phpOMS\tests\Validation\Network\IpTest:testValidIp6' => ['description' => 'A ip6 can be validated', 'type' => 'framework'],

    'phpOMS\tests\Validation\ValidatorTest' => ['description' => 'General validator', 'type' => 'framework'],
    'phpOMS\tests\Validation\ValidatorTest:testValidationContains' => ['description' => 'A string can be checked if it contains a substring', 'type' => 'framework'],
    'phpOMS\tests\Validation\ValidatorTest:testValidationLength' => ['description' => 'A string can be checked if it has a certain length', 'type' => 'framework'],
    'phpOMS\tests\Validation\ValidatorTest:testValidationLimit' => ['description' => 'A value can be checked if it is in range', 'type' => 'framework'],
    'phpOMS\tests\Validation\ValidatorTest:testValidationType' => ['description' => 'A value can be checked to be of a defined type', 'type' => 'framework'],
    'phpOMS\tests\Validation\ValidatorTest:testValidationError' => ['description' => 'The error message and error code have the expected default values', 'type' => 'framework'],
    'phpOMS\tests\Validation\ValidatorTest:testValidators' => ['description' => 'Custom validators can be specified in order to validate a value', 'type' => 'framework'],
    'phpOMS\tests\Validation\ValidatorTest:testMatching' => ['description' => 'A value can be checked to match a regular expression', 'type' => 'framework'],

    'phpOMS\tests\Version\VersionTest' => ['description' => 'Version handler', 'type' => 'framework'],
    'phpOMS\tests\Version\VersionTest:testVersionCompare' => ['description' => 'Versions can be compared with each other', 'type' => 'framework'],

    'phpOMS\tests\Views\ViewTest' => ['description' => 'View for response rendering', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testDefault' => ['description' => 'The view has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testGetText' => ['description' => 'The view can output text from the localization manager', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testGetHtml' => ['description' => 'The view can output html escaped text from the localization manager', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testDataInputOutput' => ['description' => 'View data can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testDataAdd' => ['description' => 'View data can be added and returned', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testInvalidDataOverwrite' => ['description' => 'View data cannot be added if it already exists', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testRemove' => ['description' => 'View data can be removed', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testInvalidDataRemove' => ['description' => 'None-existing view data cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testGetRequest' => ['description' => 'The request can be returned', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testGetResponse' => ['description' => 'The response can be returned', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testPrintHtml' => ['description' => 'Text can be html escaped', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testViewInputOutput' => ['description' => 'Views can be added and returned from a view', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testInvalidViewGet' => ['description' => 'None-existing views cannot be returned', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testViewRemove' => ['description' => 'Views can be removed', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testInvalidViewRemove' => ['description' => 'None-existing views cannot be removed', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testOverwritingView' => ['description' => 'A view can be forcefully overwritten', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testInvalidOverwritingView' => ['description' => 'By default a view is not overwritten', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testRender' => ['description' => 'A view template can be rendered', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testSerialize' => ['description' => 'A view template can be serialized', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testArray' => ['description' => 'A view can be turned into an array containing the rendered templates', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testRenderException' => ['description' => 'Rendering a invalid template throws a PathException', 'type' => 'framework'],
    'phpOMS\tests\Views\ViewTest:testSerializeException' => ['description' => 'Serializing a invalid template throws a PathException', 'type' => 'framework'],

    'phpOMS\tests\Views\PaginationViewTest' => ['description' => 'View for pagination', 'type' => 'framework'],
    'phpOMS\tests\Views\PaginationViewTest:testDefault' => ['description' => 'The pagination view has the expected default values after initialization', 'type' => 'framework'],
    'phpOMS\tests\Views\PaginationViewTest:testMaxPagesInputOutput' => ['description' => 'The max pages can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Views\PaginationViewTest:testPagesInputOutput' => ['description' => 'The pages can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Views\PaginationViewTest:testPageInputOutput' => ['description' => 'The page can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\Views\PaginationViewTest:testResultsInputOutput' => ['description' => 'The results can be set and returned', 'type' => 'framework'],

    'phpOMS\tests\ApplicationAbstractTest' => ['description' => 'Application abstraction', 'type' => 'framework'],
    'phpOMS\tests\ApplicationAbstractTest:testInputOutput' => ['description' => 'Application values can be set and returned', 'type' => 'framework'],
    'phpOMS\tests\ApplicationAbstractTest:testInvalidInputOutput' => ['description' => 'Application values cannot be overwritten', 'type' => 'framework'],

    'phpOMS\tests\AutoloaderTest' => ['description' => 'Class autoloader', 'type' => 'framework'],
    'phpOMS\tests\AutoloaderTest:testAutoloader' => ['description' => 'Classes can be checked for existence', 'type' => 'framework'],

    // Modules are below
    'Modules\tests\Admin\Admin\AdminTest' => ['description' => 'Admin module - general module information', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testModuleIntegration' => ['description' => 'The module can be installed, deactivated and activated', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testValidMapper' => ['description' => 'The mappers are valid', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testMapperAgainstModel' => ['description' => 'The mappers match the models', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testValidDbSchema' => ['description' => 'The database schema definition is valid', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testDbSchemaAgainstDb' => ['description' => 'The database schema is correctly setup in the database', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testMapperAgainstDbSchema' => ['description' => 'The mapper matches the database setup', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testJson' => ['description' => 'The module info file has the correct structure', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testDependency' => ['description' => 'The dependencies got installed', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testRoutes' => ['description' => 'The routes got installed and the endpoints are defined', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testHooks' => ['description' => 'The hooks got installed and the endpoints are defined', 'type' => 'module'],
    'Modules\tests\Admin\Admin\AdminTest:testNavigation' => ['description' => 'The navigation got installed', 'type' => 'module'],
    // CONTROLLER:
    'Modules\tests\Admin\Controller\ApiControllerTest' => ['description' => 'Admin api controller', 'type' => 'module'],
    // settings
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiSettingsGet' => ['description' => 'Application settings can be read from the database', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiSettingsSet' => ['description' => 'Application settings can be set in the database', 'type' => 'module'],
    // groups
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupGet' => ['description' => 'A user group can be returned', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupSet' => ['description' => 'A user group can be updated', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupFind' => ['description' => 'A user group can be found by name', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupCreateDelete' => ['description' => 'A user group can be created and deleted', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupCreateInvalid' => ['description' => 'A invalid user group cannot be created', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddAccountToGroup' => ['description' => 'A user can be added to a user group', 'type' => 'module'],
    // group_permission
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddGroupPermission' => ['description' => 'A permission can be added to a user group', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupPermissionGet' => ['description' => 'A group permission can be returned', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupPermissionCreateDelete' => ['description' => 'A user group permission can be created and deleted', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddGroupPermissionInvalidData' => ['description' => 'A permission with missing data cannot be added to a user group', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddGroupPermissionInvalidType' => ['description' => 'A invalid permission type cannot be added to a user group', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupPermissionUpdate' => ['description' => 'A user group permission can be updated', 'type' => 'module'],
    // users
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiGroupGet' => ['description' => 'A user can be returned', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountUpdate' => ['description' => 'A user can be updated', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountFind' => ['description' => 'A user can be found by name', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountAndProfileCreate' => ['description' => 'A user and profile for the user can be created', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountDelete' => ['description' => 'A user can be deleted', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountCreateInvalid' => ['description' => 'A invalid user cannot be created', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddGroupToAccount' => ['description' => 'A user group can be added to a user', 'type' => 'module'],
    // user_permission
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddAccountPermission' => ['description' => 'A permission can be added to a user', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountPermissionGet' => ['description' => 'A user permission can be returned', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountPermissionCreateDelete' => ['description' => 'A user permission can be created and deleted', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddAccountPermissionInvalidData' => ['description' => 'A permission with missing data cannot be added to a user', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAddAccountPermissionInvalidType' => ['description' => 'A invalid permission type cannot be added to a user', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountPermissionUpdate' => ['description' => 'A user permission can be updated', 'type' => 'module'],
    // groups & users
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiAccountGroupFind' => ['description' => 'A user and user group can be found by name', 'type' => 'module'],
    // module
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiModuleStatusUpdate' => ['description' => 'The status of a module can be updated', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiModuleStatusUpdateEmptyModule' => ['description' => 'A missing module cannot be updated', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiModuleStatusUpdateInvalidStatus' => ['description' => 'A invalid module status cannot update a module', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiModuleStatusUpdateInvalidModule' => ['description' => 'A invalid module cannot be updated', 'type' => 'module'],
    'Modules\tests\Admin\Controller\ApiControllerTest:testApiReInit' => ['description' => 'A module can be re-initialized', 'type' => 'module'],
];
